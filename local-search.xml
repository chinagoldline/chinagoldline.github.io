<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>使用JDK8 LocalDateTime查询Mysql datetime类型字段精度问题</title>
    <link href="/2021/10/21/%E4%BD%BF%E7%94%A8JDK8%20LocalDateTime%E6%9F%A5%E8%AF%A2Mysql%20datetime%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5%E7%B2%BE%E5%BA%A6%E9%97%AE%E9%A2%98-%E4%BD%BF%E7%94%A8jdk8localdatetime%E6%9F%A5%E8%AF%A2mysqldatetime%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5%E7%B2%BE%E5%BA%A6%E9%97%AE%E9%A2%98/"/>
    <url>/2021/10/21/%E4%BD%BF%E7%94%A8JDK8%20LocalDateTime%E6%9F%A5%E8%AF%A2Mysql%20datetime%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5%E7%B2%BE%E5%BA%A6%E9%97%AE%E9%A2%98-%E4%BD%BF%E7%94%A8jdk8localdatetime%E6%9F%A5%E8%AF%A2mysqldatetime%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5%E7%B2%BE%E5%BA%A6%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="Mysql-datetime-类型简介"><a href="#Mysql-datetime-类型简介" class="headerlink" title="Mysql datetime 类型简介"></a>Mysql datetime 类型简介</h1><p>A DATETIME or TIMESTAMP value can include a trailing fractional seconds part in up to microseconds (6 digits) precision. In particular, any fractional part in a value inserted into a DATETIME or TIMESTAMP column is stored rather than discarded. With the fractional part included, the format for these values is ‘YYYY-MM-DD hh:mm:ss[.fraction]’, the range for DATETIME values is ‘1000-01-01 00:00:00.000000’ to ‘9999-12-31 23:59:59.999999’, and the range for TIMESTAMP values is ‘1970-01-01 00:00:01.000000’ to ‘2038-01-19 03:14:07.999999’. The fractional part should always be separated from the rest of the time by a decimal point; no other fractional seconds delimiter is recognized.<br>原文地址：<a href="https://dev.mysql.com/doc/refman/5.7/en/datetime.html">https://dev.mysql.com/doc/refman/5.7/en/datetime.html</a><br>从Mysql官方介绍看，datetime类型的字段默认的精度为微秒，也就是小数点后有6位数。</p><h1 id="一个神奇的Bug"><a href="#一个神奇的Bug" class="headerlink" title="一个神奇的Bug"></a>一个神奇的Bug</h1><p>请看下面这段SQL，这个SQL的start_time 和end_time 的值取的LocalDateTime类型的值作为入参。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">*</span><br><span class="line">FROM</span><br><span class="line">table1</span><br><span class="line">WHERE</span><br><span class="line">deleted = <span class="number">0</span></span><br><span class="line">AND start_time &gt;= <span class="string">&#x27;2020-04-12T23:59:59.999999998&#x27;</span></span><br><span class="line">AND end_time &lt;= <span class="string">&#x27; 2020-04-19T23:59:59.999999998&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>执行结果，你会发现一个神奇的问题，那就是end_time 为2020-04-20T00:00:00的数据也被搜索出来了。<br>如果你的搜索对秒这个数据不敏感，那么没什么影响。<br>但是如果你的搜索对秒有严格要求，那此处就是Bug了。<br><strong>这是为什么呢？</strong><br>因为Mysql在执行的时候对纳秒数据也就是998 进行了四舍五入，四舍五入以后<br>在执行的时候，实际时间就变成了：2020-04-20T00:00:00</p><h1 id="修复查询或入库时间Bug"><a href="#修复查询或入库时间Bug" class="headerlink" title="修复查询或入库时间Bug"></a>修复查询或入库时间Bug</h1><p>在最后一步进行参数设置时，比如获取当前时间，可以使用<br>下面的API强制设置纳秒为0，示例如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LocalDateTime dateTime=LocalDateTime.now().withNano(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p><strong>注：LocalDateTime 的时间精度是默认到纳秒的，完美可以四舍五入提前多拿到1秒时间。</strong></p><h1 id="LocalDateTime简介"><a href="#LocalDateTime简介" class="headerlink" title="LocalDateTime简介"></a>LocalDateTime简介</h1><p>JDK8新特性里提供了3个时间类：LocalDate、LocalTime、LocalDateTime</p><p>在项目开发中，已经需要对Date类型进行格式，否则可读性很差，格式化Date类型要使用SimpleDateFormat，但SimpleDateFormat是现成不安全的。</p><h2 id="为什么需要LocalDate、LocalTime、LocalDateTime"><a href="#为什么需要LocalDate、LocalTime、LocalDateTime" class="headerlink" title="为什么需要LocalDate、LocalTime、LocalDateTime"></a>为什么需要LocalDate、LocalTime、LocalDateTime</h2><h3 id="Date如果不格式化，打印出的日期可读性差"><a href="#Date如果不格式化，打印出的日期可读性差" class="headerlink" title="Date如果不格式化，打印出的日期可读性差"></a>Date如果不格式化，打印出的日期可读性差</h3><p>Tue Sep 10 09:34:04 CST 2019</p><h3 id="使用SimpleDateFormat对时间进行格式化，但SimpleDateFormat是线程不安全的。SimpleDateFormat的format方法最终调用代码："><a href="#使用SimpleDateFormat对时间进行格式化，但SimpleDateFormat是线程不安全的。SimpleDateFormat的format方法最终调用代码：" class="headerlink" title="使用SimpleDateFormat对时间进行格式化，但SimpleDateFormat是线程不安全的。SimpleDateFormat的format方法最终调用代码："></a>使用SimpleDateFormat对时间进行格式化，但SimpleDateFormat是线程不安全的。SimpleDateFormat的format方法最终调用代码：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> StringBuffer <span class="title">format</span><span class="params">(Date date, StringBuffer toAppendTo, FieldDelegate delegate)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Convert input date to time field list</span></span><br><span class="line">        calendar.setTime(date);</span><br><span class="line">        <span class="keyword">boolean</span> useDateFormatSymbols = useDateFormatSymbols();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; compiledPattern.length; ) &#123;</span><br><span class="line">            <span class="keyword">int</span> tag = compiledPattern[i] &gt;&gt;&gt; <span class="number">8</span>;</span><br><span class="line">            <span class="keyword">int</span> count = compiledPattern[i++] &amp; <span class="number">0xff</span>;</span><br><span class="line">            <span class="keyword">if</span> (count == <span class="number">255</span>) &#123;</span><br><span class="line">                count = compiledPattern[i++] &lt;&lt; <span class="number">16</span>;</span><br><span class="line">                count |= compiledPattern[i++];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">switch</span> (tag) &#123;</span><br><span class="line">                <span class="keyword">case</span> TAG_QUOTE_ASCII_CHAR:</span><br><span class="line">                    toAppendTo.append((<span class="keyword">char</span>) count);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> TAG_QUOTE_CHARS:</span><br><span class="line">                    toAppendTo.append(compiledPattern, i, count);</span><br><span class="line">                    i += count;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    subFormat(tag, count, delegate, toAppendTo, useDateFormatSymbols);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> toAppendTo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>calendar是共享变量，并且这个共享变量没有做线程安全控制。当多个线程同时使用相同的SimpleDateFormat对象【如用static修饰的SimpleDateFormat】调用format方法时，多个线程会同时调用calendar.setTime方法，可能一个线程刚设置好time值 另外的一个线程马上把设置的time值给修改了导致返回的格式化时间可能是错误的。</p><p>　　在多并发情况下使用SimpleDateFormat需格外注意 SimpleDateFormat除了format是线程不安全以外，parse方法也是线程不安全的。parse方法实际调用alb.establish(calendar).getTime()方法来解析，alb.establish(calendar)方法里主要完成了</p><p>　　a、重置日期对象cal的属性值</p><p>　　b、使用calb中中属性设置cal</p><p>　　c、返回设置好的cal对象</p><p>　　但是这三步不是原子操作。</p><p>　　多线程并发如何保证线程安全 - 避免线程之间共享一个SimpleDateFormat对象，每个线程使用时都创建一次SimpleDateFormat对象 =&gt; 创建和销毁对象的开销大 - 对使用format和parse方法的地方进行加锁 =&gt; 线程阻塞性能差 - 使用ThreadLocal保证每个线程最多只创建一次SimpleDateFormat对象 =&gt; 较好的方法。Date对时间处理比较麻烦，比如想获取某年、某月、某星期，以及n天以后的时间，如果用Date来处理的话真是太难了，你可能会说Date类不是有getYear、getMonth这些方法吗，获取年月日很Easy，但都被弃用了。</p><p>　　</p><h2 id="Java8全新的日期和时间API"><a href="#Java8全新的日期和时间API" class="headerlink" title="Java8全新的日期和时间API"></a>Java8全新的日期和时间API</h2><h3 id="LocalDate"><a href="#LocalDate" class="headerlink" title="LocalDate"></a>LocalDate</h3><p>　　LocalDate是日期处理类，具体API如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取当前日期</span></span><br><span class="line">LocalDate now = LocalDate.now();</span><br><span class="line"><span class="comment">// 设置日期</span></span><br><span class="line">LocalDate localDate = LocalDate.of(<span class="number">2019</span>, <span class="number">9</span>, <span class="number">10</span>);</span><br><span class="line"><span class="comment">// 获取年</span></span><br><span class="line"><span class="keyword">int</span> year = localDate.getYear();     <span class="comment">//结果：2019</span></span><br><span class="line"><span class="keyword">int</span> year1 = localDate.get(ChronoField.YEAR); <span class="comment">//结果：2019</span></span><br><span class="line"><span class="comment">// 获取月</span></span><br><span class="line">Month month = localDate.getMonth();   <span class="comment">// 结果：SEPTEMBER</span></span><br><span class="line"><span class="keyword">int</span> month1 = localDate.get(ChronoField.MONTH_OF_YEAR); <span class="comment">//结果：9</span></span><br><span class="line"><span class="comment">// 获取日</span></span><br><span class="line"><span class="keyword">int</span> day = localDate.getDayOfMonth();   <span class="comment">//结果：10</span></span><br><span class="line"><span class="keyword">int</span> day1 = localDate.get(ChronoField.DAY_OF_MONTH); <span class="comment">// 结果：10</span></span><br><span class="line"><span class="comment">// 获取星期</span></span><br><span class="line">DayOfWeek dayOfWeek = localDate.getDayOfWeek();   <span class="comment">//结果：TUESDAY</span></span><br><span class="line"><span class="keyword">int</span> dayOfWeek1 = localDate.get(ChronoField.DAY_OF_WEEK); <span class="comment">//结果：2</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="LocalTime"><a href="#LocalTime" class="headerlink" title="LocalTime"></a>LocalTime</h3><p>　　LocalTime是时间处理类，具体API如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取当前时间</span></span><br><span class="line">LocalTime now = LocalTime.now();</span><br><span class="line"><span class="comment">// 设置时间</span></span><br><span class="line">LocalTime localTime = LocalTime.of(<span class="number">13</span>, <span class="number">51</span>, <span class="number">10</span>);</span><br><span class="line"><span class="comment">//获取小时</span></span><br><span class="line"><span class="keyword">int</span> hour = localTime.getHour();    <span class="comment">// 结果：13</span></span><br><span class="line"><span class="keyword">int</span> hour1 = localTime.get(ChronoField.HOUR_OF_DAY); <span class="comment">// 结果：13</span></span><br><span class="line"><span class="comment">//获取分</span></span><br><span class="line"><span class="keyword">int</span> minute = localTime.getMinute();  <span class="comment">// 结果：51</span></span><br><span class="line"><span class="keyword">int</span> minute1 = localTime.get(ChronoField.MINUTE_OF_HOUR); <span class="comment">// 结果：51</span></span><br><span class="line"><span class="comment">//获取秒</span></span><br><span class="line"><span class="keyword">int</span> second = localTime.getSecond();   <span class="comment">// 结果：10</span></span><br><span class="line"><span class="keyword">int</span> second1 = localTime.get(ChronoField.SECOND_OF_MINUTE); <span class="comment">// 结果：10</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="LocalDateTime"><a href="#LocalDateTime" class="headerlink" title="LocalDateTime"></a>LocalDateTime</h3><p>　　LocalDateTime可以设置年月日时分秒，相当于LocalDate + LocalTime</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取当前日期时间</span></span><br><span class="line">LocalDateTime localDateTime = LocalDateTime.now();</span><br><span class="line"><span class="comment">// 设置日期</span></span><br><span class="line">LocalDateTime localDateTime1 = LocalDateTime.of(<span class="number">2019</span>, Month.SEPTEMBER, <span class="number">10</span>, <span class="number">14</span>, <span class="number">46</span>, <span class="number">56</span>);</span><br><span class="line">LocalDateTime localDateTime2 = LocalDateTime.of(localDate, localTime);</span><br><span class="line">LocalDateTime localDateTime3 = localDate.atTime(localTime);</span><br><span class="line">LocalDateTime localDateTime4 = localTime.atDate(localDate);</span><br><span class="line"><span class="comment">// 获取LocalDate</span></span><br><span class="line">LocalDate localDate2 = localDateTime.toLocalDate();</span><br><span class="line"><span class="comment">// 获取LocalTime</span></span><br><span class="line">LocalTime localTime2 = localDateTime.toLocalTime();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Instant"><a href="#Instant" class="headerlink" title="Instant"></a>Instant</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建Instant对象</span></span><br><span class="line">Instant instant = Instant.now();</span><br><span class="line"><span class="comment">// 获取秒</span></span><br><span class="line"><span class="keyword">long</span> currentSecond = instant.getEpochSecond();</span><br><span class="line"><span class="comment">// 获取毫秒</span></span><br><span class="line"><span class="keyword">long</span> currentMilli = instant.toEpochMilli();</span><br><span class="line">　　如果只是为了获取秒数或者毫秒数，使用System.currentTimeMillis()来得更为方便</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="修改LocalDate、LocalTime、LocalDateTime、Instant"><a href="#修改LocalDate、LocalTime、LocalDateTime、Instant" class="headerlink" title="修改LocalDate、LocalTime、LocalDateTime、Instant"></a>修改LocalDate、LocalTime、LocalDateTime、Instant</h2><p>　　LocalDate、LocalTime、LocalDateTime、Instant为不可变对象，修改这些对象对象会返回一个副本。增加、减少年数、月数、天数等 以LocalDateTime为例。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建日期：2019-09-10 14:46:56</span></span><br><span class="line">LocalDateTime localDateTime = LocalDateTime.of(<span class="number">2019</span>, Month.SEPTEMBER, <span class="number">10</span>, <span class="number">14</span>, <span class="number">46</span>, <span class="number">56</span>);</span><br><span class="line"><span class="comment">//增加一年</span></span><br><span class="line">localDateTime = localDateTime.plusYears(<span class="number">1</span>);  <span class="comment">//结果： 2020-09-10 14:46:56</span></span><br><span class="line">localDateTime = localDateTime.plus(<span class="number">1</span>, ChronoUnit.YEARS); <span class="comment">//结果： 2021-09-10 14:46:56</span></span><br><span class="line"><span class="comment">//减少一个月</span></span><br><span class="line">localDateTime = localDateTime.minusMonths(<span class="number">1</span>);  <span class="comment">//结果： 2021-08-10 14:46:56</span></span><br><span class="line">localDateTime = localDateTime.minus(<span class="number">1</span>, ChronoUnit.MONTHS); <span class="comment">//结果： 2021-07-10 14:46:56</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>　　通过with修改某些值，年月日时分秒都可以通过with方法设置。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改年为2019</span></span><br><span class="line">localDateTime = localDateTime.withYear(<span class="number">2020</span>);</span><br><span class="line"><span class="comment">//修改为2022</span></span><br><span class="line">localDateTime = localDateTime.with(ChronoField.YEAR, <span class="number">2022</span>);</span><br></pre></td></tr></table></figure><p>　　日期计算。比如有些时候想知道这个月的最后一天是几号、下个周末是几号，通过提供的时间和日期API可以很快得到答案 。TemporalAdjusters提供的各种日期时间格式化的静态类，比如firstDayOfYear是当前日期所属年的第一天</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LocalDate localDate = LocalDate.now();</span><br><span class="line">LocalDate localDate1 = localDate.with(TemporalAdjusters.firstDayOfYear());</span><br></pre></td></tr></table></figure><p> 　　格式化时间。DateTimeFormatter默认提供了多种格式化方式，如果默认提供的不能满足要求，可以通过DateTimeFormatter的ofPattern方法创建自定义格式化方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">LocalDate localDate = LocalDate.of(<span class="number">2019</span>, <span class="number">9</span>, <span class="number">10</span>);</span><br><span class="line">String s1 = localDate.format(DateTimeFormatter.BASIC_ISO_DATE);</span><br><span class="line">String s2 = localDate.format(DateTimeFormatter.ISO_LOCAL_DATE);</span><br><span class="line"><span class="comment">//自定义格式化</span></span><br><span class="line">DateTimeFormatter dateTimeFormatter =   DateTimeFormatter.ofPattern(<span class="string">&quot;dd/MM/yyyy&quot;</span>);</span><br><span class="line">String s3 = localDate.format(dateTimeFormatter);</span><br></pre></td></tr></table></figure><p>　　解析时间。和SimpleDateFormat相比，DateTimeFormatter是线程安全的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LocalDate localDate1 = LocalDate.parse(<span class="string">&quot;20190910&quot;</span>, DateTimeFormatter.BASIC_ISO_DATE);</span><br><span class="line">LocalDate localDate2 = LocalDate.parse(<span class="string">&quot;2019-09-10&quot;</span>, DateTimeFormatter.ISO_LOCAL_DATE);</span><br></pre></td></tr></table></figure><p>　　Date与LocalDateTime转换。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * LocalDateTime转毫秒时间戳</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> localDateTime LocalDateTime</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> 时间戳</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Long <span class="title">localDateTimeToTimestamp</span><span class="params">(LocalDateTime localDateTime)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        ZoneId zoneId = ZoneId.systemDefault();</span><br><span class="line">        Instant instant = localDateTime.atZone(zoneId).toInstant();</span><br><span class="line">        <span class="keyword">return</span> instant.toEpochMilli();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 时间戳转LocalDateTime</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> timestamp 时间戳</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> LocalDateTime</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDateTime <span class="title">timestampToLocalDateTime</span><span class="params">(<span class="keyword">long</span> timestamp)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Instant instant = Instant.ofEpochMilli(timestamp);</span><br><span class="line">        ZoneId zone = ZoneId.systemDefault();</span><br><span class="line">        <span class="keyword">return</span> LocalDateTime.ofInstant(instant, zone);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Date转LocalDateTime</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> date Date</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> LocalDateTime</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDateTime <span class="title">dateToLocalDateTime</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Instant instant = date.toInstant();</span><br><span class="line">        ZoneId zoneId = ZoneId.systemDefault();</span><br><span class="line">        <span class="keyword">return</span> instant.atZone(zoneId).toLocalDateTime();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * LocalDateTime转Date</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> localDateTime LocalDateTime</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Date</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">localDateTimeToDate</span><span class="params">(LocalDateTime localDateTime)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        ZoneId zoneId = ZoneId.systemDefault();</span><br><span class="line">        ZonedDateTime zdt = localDateTime.atZone(zoneId);</span><br><span class="line">        <span class="keyword">return</span> Date.from(zdt.toInstant());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redis6.x新特性之ACL用户安全策略</title>
    <link href="/2021/10/14/Redis6.x%E6%96%B0%E7%89%B9%E6%80%A7%E4%B9%8BACL%E7%94%A8%E6%88%B7%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5-redis6x%E6%96%B0%E7%89%B9%E6%80%A7%E4%B9%8Bacl%E7%94%A8%E6%88%B7%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5/"/>
    <url>/2021/10/14/Redis6.x%E6%96%B0%E7%89%B9%E6%80%A7%E4%B9%8BACL%E7%94%A8%E6%88%B7%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5-redis6x%E6%96%B0%E7%89%B9%E6%80%A7%E4%B9%8Bacl%E7%94%A8%E6%88%B7%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="ACL介绍"><a href="#ACL介绍" class="headerlink" title="ACL介绍"></a>ACL介绍</h1><p>在Redis6之前的版本，我们只能使用requirepass参数给default用户配置登录密码，同一个redis集群的所有开发都共享default用户，难免会出现误操作把别人的key删掉或者数据泄露的情况，那之前我们也可以使用rename command的方式给一些危险函数重命名或禁用，但是这样也防止不了自己的key被其他人访问。</p><p>因此Redis6版本推出了ACL(Access Control List)访问控制权限的功能，基于此功能，我们可以设置多个用户，并且给每个用户单独设置命令权限和数据权限。 为了保证向下兼容，Redis6保留了default用户和使用requirepass的方式给default用户设置密码，默认情况下default用户拥有Redis最大权限，我们使用redis-cli连接时如果没有指定用户名，用户也是默认default。鼓掌！</p><p>我们可以在配置文件中或者命令行中设置ACL，如果使用配置config文件的话需要重启服务，使用配置aclfile文件或者命令行授权的话无需重启Redis服务但需要及时将权限持久化到磁盘，否则下次重启的时候无法恢复该权限。 </p><p>官网：<a href="https://redis.io/topics/acl">https://redis.io/topics/acl</a></p><h1 id="配置文件模式"><a href="#配置文件模式" class="headerlink" title="配置文件模式"></a>配置文件模式</h1><p>配置ACL的方式有两种，一种是在config文件中直接配置，另一种是在外部aclfile中配置。配置的命令是一样的，但是两种方式只能选择其中一种，我们之前使用requirepass给default用户设置密码 默认就是使用config的方式，执行config rewrite重写配置后会自动在config文件最下面新增一行记录配置default的密码和权限：</p><h2 id="conf文件模式"><a href="#conf文件模式" class="headerlink" title="conf文件模式"></a>conf文件模式</h2><p>使用redis.conf文件配置default和其他用户的ACL权限：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>在config文件中配置<span class="keyword">default</span>用户的密码</span><br><span class="line">requirepass <span class="number">123456</span> </span><br><span class="line"><span class="number">2.</span>在config文件中添加DSL命令配置用户ACL权限</span><br><span class="line"> </span><br><span class="line"><span class="number">3.</span>在config文件中注释aclfile的路径配置(默认是注释的)</span><br><span class="line">#aclfile /opt/app/redis6/users.acl</span><br><span class="line"> </span><br><span class="line"><span class="number">4.</span>重启redis服务</span><br></pre></td></tr></table></figure><p>因此我们可以直接在config配置文件中使用上面default用户ACL这行DSL命令设置用户权限，或者我们也可以配置外部aclfile配置权限。</p><p>配置aclfile需要先将config中配置的DSL注释或删除，因为Redis不允许两种ACL管理方式同时使用，否则在启动redis的时候会报下面的错误：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Configuring Redis with users defined in redis.conf and at the same setting an ACL file path is invalid. This setup is very likely to lead to configuration errors and security holes, please define either an ACL file or declare users directly in your redis.conf, but not both.</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="外部ACLFILE模式"><a href="#外部ACLFILE模式" class="headerlink" title="外部ACLFILE模式"></a>外部ACLFILE模式</h2><p>使用外部aclfile文件配置Default和其他用户的ACL权限：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>注释redis.conf中所有已授权的ACL命令，如：</span><br><span class="line">#user <span class="keyword">default</span> on #8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92 ~* +<span class="meta">@all</span></span><br><span class="line"> </span><br><span class="line"><span class="number">2.</span>在config文件中注释<span class="keyword">default</span>用户的密码，因为开启aclfile之后，requirepass的密码就失效了：</span><br><span class="line">redis.conf</span><br><span class="line">#requirepass <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">users.acl</span><br><span class="line">user <span class="keyword">default</span> on #8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92 ~* +<span class="meta">@all</span></span><br><span class="line"> </span><br><span class="line"><span class="number">3.</span>在config文件中配置aclfile的路径，然后创建该文件，否则重启redis服务会报错找不到该文件</span><br><span class="line">aclfile /opt/app/redis6/users.acl</span><br><span class="line">touch /opt/app/redis6/users.acl</span><br><span class="line"> </span><br><span class="line"><span class="number">4.</span>在外部aclfile文件中添加DSL命令配置用户ACL权限</span><br><span class="line"> </span><br><span class="line"><span class="number">5.</span>重启redis服务或使用aclfile load命令加载权限</span><br><span class="line">或在redis命令行中执行：</span><br><span class="line">aclfile load</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>开启aclfile之后不再推荐在redis.conf文件中通过requirepass配置default的密码，因为它不再生效，同时开启aclfile之后也不能使用redis-cli -a xxx登陆，必须使用redis-cli –user xxx  –pass yyy来登陆：  </p><h1 id="对比conf和aclfile模式"><a href="#对比conf和aclfile模式" class="headerlink" title="对比conf和aclfile模式"></a>对比conf和aclfile模式</h1><p> 在redis.conf和aclfile模式中配置DSL 官方更推荐使用aclfile，因为如果在redis,conf中配置了权限之后需要重启redis服务才能将配置的权限加载至redis服务中来，但如果使用aclfile模式，可以调用acl load命令将aclfile中配置的ACL权限热加载进环境中，类似于Mysql中的flush privileges。</p><table><thead><tr><th>对比项</th><th>redis.conf</th><th>users.acl</th></tr></thead><tbody><tr><td>配置方式</td><td>DSL</td><td>DSL</td></tr><tr><td>加载ACL配置</td><td>重启Redis服务</td><td>ACL LOAD命令</td></tr><tr><td>持久化ACL配置</td><td>CONFIG REWRITE命令</td><td>ACL SAVE命令</td></tr></tbody></table><h1 id="命令行模式"><a href="#命令行模式" class="headerlink" title="命令行模式"></a>命令行模式</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>上面可以看到，我们在配置文件中配置的ACL权限，需要执行ACL LOAD或者重启Redis服务才能生效，事实上我们可以直接在命令行下配置ACL，在命令行模式下配置的权限无需重启服务即可生效。我们也可以在命令行模式下配置ACL并将其持久化到aclfile或者config文件中(这取决于配置文件中选择的是config模式还是外部aclfile模式)，一旦将权限持久化到aclfile或cofig文件中，下次重启就会自动加载该权限，如果忘记持久化，一旦服务宕机或重启，该权限就会丢失。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">如果使用config模式，将ACL权限持久化到redis.conf文件中使用下面的命令：</span><br><span class="line">config rewrite</span><br><span class="line"> </span><br><span class="line">如果使用aclfile模式，将ACL权限持久化到users.acl文件中使用下面的命令：</span><br><span class="line">acl save</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>ACL规则<br>ACL是使用DSL（Domain specific language）定义的，该DSL描述了用户能够执行的操作。该规则始终从上到下，从左到右应用，因为规则的顺序对于理解用户的实际权限很重要。ACL规则可以在redis.conf文件以及users.acl文件中配置DSL，也可以在命令行中通过ACL命令配置。</p><p>启用和禁用用户</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">on：启用用户：可以以该用户身份进行认证。</span><br><span class="line">off：禁用用户：不再可以使用此用户进行身份验证，但是已经通过身份验证的连接仍然可以使用。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>允许和禁止调用命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">+&lt;command&gt;：将命令添加到用户可以调用的命令列表中。</span><br><span class="line">-&lt;command&gt;：将命令从用户可以调用的命令列表中移除。</span><br><span class="line">+@&lt;category&gt;：允许用户调用 &lt;category&gt; 类别中的所有命令，有效类别为<span class="meta">@admin</span>，<span class="meta">@set</span>，<span class="meta">@sortedset</span>等，可通过调用ACL CAT命令查看完整列表。特殊类别<span class="meta">@all</span>表示所有命令，包括当前和未来版本中存在的所有命令。</span><br><span class="line">-@&lt;category&gt;：禁止用户调用&lt;category&gt; 类别中的所有命令。</span><br><span class="line">+&lt;command&gt;|subcommand：允许使用已禁用命令的特定子命令。</span><br><span class="line">allcommands：+<span class="meta">@all</span>的别名。包括当前存在的命令以及将来通过模块加载的所有命令。</span><br><span class="line">nocommands：-<span class="meta">@all</span>的别名，禁止调用所有命令。</span><br><span class="line">允许或禁止访问某些Key</span><br><span class="line"> ~&lt;pattern&gt;：添加可以在命令中提及的键模式。例如~*和* allkeys 允许所有键。</span><br><span class="line">* resetkeys：使用当前模式覆盖所有允许的模式。如： ~foo:* ~bar:*  resetkeys ~objects:* ，客户端只能访问匹配 object:* 模式的 KEY。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>为用户配置有效密码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&lt;password&gt;：将此密码添加到用户的有效密码列表中。例如，&gt;mypass将“mypass”添加到有效密码列表中。该命令会清除用户的nopass标记。每个用户可以有任意数量的有效密码。</span><br><span class="line">&lt;&lt;password&gt;：从有效密码列表中删除此密码。若该用户的有效密码列表中没有此密码则会返回错误信息。</span><br><span class="line">#&lt;hash&gt;：将此SHA-<span class="number">256</span>哈希值添加到用户的有效密码列表中。该哈希值将与为ACL用户输入的密码的哈希值进行比较。允许用户将哈希存储在users.acl文件中，而不是存储明文密码。仅接受SHA-<span class="number">256</span>哈希值，因为密码哈希必须为<span class="number">64</span>个字符且小写的十六进制字符。</span><br><span class="line">!&lt;hash&gt;：从有效密码列表中删除该哈希值。当不知道哈希值对应的明文是什么时很有用。</span><br><span class="line">nopass：移除该用户已设置的所有密码，并将该用户标记为nopass无密码状态：任何密码都可以登录。resetpass命令可以清除nopass这种状态。</span><br><span class="line">resetpass：情况该用户的所有密码列表。而且移除nopass状态。resetpass之后用户没有关联的密码同时也无法使用无密码登录，因此resetpass之后必须添加密码或改为nopass状态才能正常登录。</span><br><span class="line">reset：重置用户状态为初始状态。执行以下操作resetpass，resetkeys，off，-<span class="meta">@all</span>。</span><br></pre></td></tr></table></figure><p>ACL LIST<br>我们可以使用ACL LIST命令来查看当前活动的ACL，默认情况下，有一个“default”用户：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; acl list</span><br><span class="line"><span class="number">1</span>) <span class="string">&quot;user default on nopass ~* +@all&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中user为关键词，default为用户名，后面的内容为ACL规则描述，on表示活跃的，nopass表示无密码， ~* 表示所有key，+@all表示所有命令。所以上面的命令表示活跃用户default无密码且可以访问所有命令以及所有数据。</p><p>ACL USERS<br>返回所有用户名：</p><p>ACL WHOAMI<br>返回当前用户名：</p><p>ACL CAT<br>查看命令类别，用于授权：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ACL CAT:显示所有的命令类别 。</span><br><span class="line">ACL CAT &lt;category&gt;:显示所有指定类别下的所有命令。 </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>ACL SETUSER<br>使用下面的命令创建或修改用户属性，username区分大小写：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#username区分大小写</span><br><span class="line">#若用户不存在则按默认规则创建用户，若存在则修改用户属性</span><br><span class="line">SETUSER &lt;username&gt; [attribs ...]</span><br><span class="line">#若用户不存在，则按默认规则创建用户。若用户存在则该命令不做任何操作。</span><br><span class="line">ACL SETUSER &lt;username&gt; </span><br><span class="line">#若用户不存在，则按默认规则创建用户，并为其增加&lt;rules&gt;。若用户存在则在已有规则上增加 &lt;rules&gt;。</span><br><span class="line">ACL SETUSER &lt;username&gt; &lt;rules&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>默认规则下新增的用户处于非活跃状态，且没有密码，同时也没有任何命令和key的权限：<br>例：使用下面的命令新增用户/修改用户的权限：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#on为活跃状态，密码为wyk123456，允许对所有csdn开头的key使用get和set命令</span><br><span class="line">ACL SETUSER wyk on &gt;wyk123456 ~csdn* +get +set</span><br><span class="line"> </span><br><span class="line">#为wyk用户新增一个可用密码csdn8888</span><br><span class="line">ACL SETUSER wyk on &gt;csdn8888</span><br><span class="line"> </span><br><span class="line">#为wyk用户新增list类别下所有命令的权限</span><br><span class="line">ACL SETUSER wyk on +<span class="meta">@list</span></span><br></pre></td></tr></table></figure><p>ACL GETUSER<br>使用下面的命令查看用户的ACL权限：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#查看用户的ACL权限</span><br><span class="line">acl getuser &lt;username&gt;</span><br></pre></td></tr></table></figure><p>ACL DELUSER<br>删除指定的用户：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#删除指定的用户</span><br><span class="line">acl deluser &lt;username&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>ACL SAVE<br>前面提到过，我们可以使用acl save命令将当前服务器中的ACL权限持久化到aclfile中，如果没持久化就关闭redis服务，那些ACL权限就会丢失，因此我们每次授权之后一定要记得ACL SAVE将ACL权限持久化到aclfile中：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#将acl权限持久化到磁盘的aclfile中</span><br><span class="line">acl save</span><br><span class="line">#如果使用redis.conf配置ACL，则使用config rewrite命令将ACL持久化到redis.conf中</span><br><span class="line">config rewrite</span><br></pre></td></tr></table></figure><p>ACL LOAD<br>我们也可以直接在aclfile中修改或新增ACL权限，修改之后不会立刻生效，我们可以在redis命令行中执行acl load将该aclfile中的权限加载至redis服务中：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#将aclfile中的权限加载至redis服务中</span><br><span class="line">acl load</span><br></pre></td></tr></table></figure><p>文章转载自：<a href="https://blog.csdn.net/wsdc0521/article/details/106765856">Redis系列(十一)、Redis6新特性之ACL安全策略（用户权限管理）</a></p>]]></content>
    
    
    <categories>
      
      <category>白话安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>聊聊Elasticsearch使用密码访问的实现方式</title>
    <link href="/2021/09/10/%E8%81%8A%E8%81%8AElasticsearch%E4%BD%BF%E7%94%A8%E5%AF%86%E7%A0%81%E8%AE%BF%E9%97%AE%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F-liao-liao-elasticsearch-shi-yong-mi-ma-fang-wen-de-shi-xian-fang-shi/"/>
    <url>/2021/09/10/%E8%81%8A%E8%81%8AElasticsearch%E4%BD%BF%E7%94%A8%E5%AF%86%E7%A0%81%E8%AE%BF%E9%97%AE%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F-liao-liao-elasticsearch-shi-yong-mi-ma-fang-wen-de-shi-xian-fang-shi/</url>
    
    <content type="html"><![CDATA[<h2 id="Elasticsearch操作步骤"><a href="#Elasticsearch操作步骤" class="headerlink" title="Elasticsearch操作步骤"></a>Elasticsearch操作步骤</h2><h3 id="Elasticsearch生成传输证书"><a href="#Elasticsearch生成传输证书" class="headerlink" title="Elasticsearch生成传输证书"></a>Elasticsearch生成传输证书</h3><p>进入es的bin目录，然后执行以下命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">elasticsearch-certutil cert -out config/elastic-certificates.p12 -pass <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="Elasticsearch添加配置参数（elasticsearch-yml）"><a href="#Elasticsearch添加配置参数（elasticsearch-yml）" class="headerlink" title="Elasticsearch添加配置参数（elasticsearch.yml）"></a>Elasticsearch添加配置参数（elasticsearch.yml）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#启用用户认证</span><br><span class="line">xpack.security.enabled: <span class="keyword">true</span></span><br><span class="line">#启用传输安全</span><br><span class="line">xpack.security.transport.ssl.enabled: <span class="keyword">true</span></span><br><span class="line">xpack.security.transport.ssl.verification_mode: certificate</span><br><span class="line">xpack.security.transport.ssl.keystore.path: elastic-certificates.p12</span><br><span class="line">xpack.security.transport.ssl.truststore.path: elastic-certificates.p12</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em>注：如果es是集群模式，添加配置参数需要在每个es节点都要添加。<br>ES官方规定，如果启用了密码，必须启用传输安全，否则在监控页面<br>监控数据会提示采集异常。但是对于HTTPS就没必要启用了，不然很多幺蛾子</em>。</p><h3 id="Elasticsearch创建用户密码"><a href="#Elasticsearch创建用户密码" class="headerlink" title="Elasticsearch创建用户密码"></a>Elasticsearch创建用户密码</h3><p>进入es的bin目录，然后执行以下命令，为每个用户输入密码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">elasticsearch-setup-passwords interactive</span><br></pre></td></tr></table></figure><p>注：此处需要先启动ES集群，然后再在某个节点执行该命令</p><h2 id="Kibana操作步骤"><a href="#Kibana操作步骤" class="headerlink" title="Kibana操作步骤"></a>Kibana操作步骤</h2><p>在kibana的配置文件（kibana.yml）中添加如下配置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#es密码</span><br><span class="line">elasticsearch.hosts: [<span class="string">&quot;http://localhost:9200&quot;</span>]</span><br><span class="line">elasticsearch.username: <span class="string">&quot;kibana_system&quot;</span></span><br><span class="line">elasticsearch.password: <span class="string">&quot;kibana_system&quot;</span></span><br></pre></td></tr></table></figure><p>增加配置后重启kibana</p><h2 id="Logstash操作步骤"><a href="#Logstash操作步骤" class="headerlink" title="Logstash操作步骤"></a>Logstash操作步骤</h2><p>在Logstash的自定义配置文件（Logstash.conf）中的output环节，<br>增加如下配置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">elasticsearch &#123;</span><br><span class="line">    id = &gt; <span class="string">&quot;estxt_web_log&quot;</span></span><br><span class="line">    action = &gt; <span class="string">&quot;index&quot;</span></span><br><span class="line">    hosts = &gt; <span class="string">&quot;localhost:9200&quot;</span></span><br><span class="line">    index = &gt; <span class="string">&quot;text-log-%&#123;+YYYY.MM.dd&#125;&quot;</span></span><br><span class="line">    user = &gt; <span class="string">&quot;elastic&quot;</span></span><br><span class="line">    password = &gt; <span class="string">&quot;elastic&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完毕后重启Logstash即可<br><em>注：由于elastic从8.0开始强制采用统一的中间件（metricbeat）进行监控数据采集，因此此处无需再配置Logstash自带监控组件。</em></p><h2 id="Metricbeat操作步骤"><a href="#Metricbeat操作步骤" class="headerlink" title="Metricbeat操作步骤"></a>Metricbeat操作步骤</h2><p>在metricbeat的配置文件metricbeat.yml中增加如下配置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">output.elasticsearch:</span><br><span class="line">  # Array of hosts to connect to.</span><br><span class="line">  hosts: [<span class="string">&quot;localhost:9200&quot;</span>]</span><br><span class="line"></span><br><span class="line">  # Protocol - either `http` (<span class="keyword">default</span>) or `https`.</span><br><span class="line">  #protocol: <span class="string">&quot;https&quot;</span></span><br><span class="line"></span><br><span class="line">  # 增加es密码配置</span><br><span class="line">  username: <span class="string">&quot;elastic&quot;</span></span><br><span class="line">  password: <span class="string">&quot;elastic&quot;</span></span><br></pre></td></tr></table></figure><p>metricbeat已经启用的各组件中也要加入es密码配置，以logstash为例说明。<br>进入modules.d目录下，找到logstash.yml和logstash-xpack.yml配置文件，<br>新增如下配置参数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- <span class="keyword">module</span>: logstash</span><br><span class="line">  xpack.enabled: <span class="keyword">true</span></span><br><span class="line">  period: 10s</span><br><span class="line">  hosts: [<span class="string">&quot;localhost:9600&quot;</span>]</span><br><span class="line">  username: <span class="string">&quot;elastic&quot;</span></span><br><span class="line">  password: <span class="string">&quot;elastic&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em>注：已启用的每个组件都要添加，否则在监控页面将无法采集到对应组件的监控数据。</em></p>]]></content>
    
    
    <categories>
      
      <category>常用Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>elastic</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>聊聊Filebeat的简单使用</title>
    <link href="/2021/09/10/%E8%81%8A%E8%81%8AFilebeat%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8-liao-liao-filebeat-de-jian-dan-shi-yong/"/>
    <url>/2021/09/10/%E8%81%8A%E8%81%8AFilebeat%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8-liao-liao-filebeat-de-jian-dan-shi-yong/</url>
    
    <content type="html"><![CDATA[<h2 id="Filebeat简介"><a href="#Filebeat简介" class="headerlink" title="Filebeat简介"></a>Filebeat简介</h2><p>由于logstash是使用java开发，对于文件采集时，比较消耗系统资源。<br>因此Filebeat横空出世，Filebeat使用Go语言进行开发，在进行文件采集时，系统资源消耗较小，但是对于数据的格式化没有logstash强大，但是其本身内置了多种中间件的数据类型，有兴趣的可以自己在官网查看。</p><h2 id="Filebeat输入配置"><a href="#Filebeat输入配置" class="headerlink" title="Filebeat输入配置"></a>Filebeat输入配置</h2><h3 id="自定义文件输入"><a href="#自定义文件输入" class="headerlink" title="自定义文件输入"></a>自定义文件输入</h3><p>编辑配置文件filebeat.yml，添加文件路径信息，样例配置如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- type: filestream</span><br><span class="line">  # Change to <span class="keyword">true</span> to enable <span class="keyword">this</span> input configuration.</span><br><span class="line">  enabled: <span class="keyword">true</span></span><br><span class="line">  # Paths that should be crawled and fetched. Glob based paths.</span><br><span class="line">  paths:</span><br><span class="line">    - d:\source.txt</span><br></pre></td></tr></table></figure><h3 id="使用系统模板"><a href="#使用系统模板" class="headerlink" title="使用系统模板"></a>使用系统模板</h3><p>此处以Nginx举例说明，首先要启用nginx的配置模板，命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./filebeat modules enable nginx </span><br></pre></td></tr></table></figure><p>在modules.d目录下，找到nginx.yml配置文件，修改相关配置为自己的文件路径：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- <span class="keyword">module</span>: nginx</span><br><span class="line">  access:</span><br><span class="line">    enabled: <span class="keyword">true</span></span><br><span class="line">    <span class="keyword">var</span>.paths: [<span class="string">&quot;/path/to/log/nginx/access.log*&quot;</span>]</span><br><span class="line">  error:</span><br><span class="line">    enabled: <span class="keyword">true</span></span><br><span class="line">    <span class="keyword">var</span>.paths: [<span class="string">&quot;/path/to/log/nginx/error.log*&quot;</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em>注：此方式与输出到elasticsearch搭配，但是据说解析效果一般，<br>此处可以自行做相关测试。</em></p><h2 id="Filebeat输出配置"><a href="#Filebeat输出配置" class="headerlink" title="Filebeat输出配置"></a>Filebeat输出配置</h2><h3 id="输出到elasticsearch-默认"><a href="#输出到elasticsearch-默认" class="headerlink" title="输出到elasticsearch(默认)"></a>输出到elasticsearch(默认)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">output.elasticsearch:</span><br><span class="line">  # Array of hosts to connect to.</span><br><span class="line">  hosts: [<span class="string">&quot;localhost:9200&quot;</span>]</span><br><span class="line"></span><br><span class="line">  # Protocol - either `http` (<span class="keyword">default</span>) or `https`.</span><br><span class="line">  #protocol: <span class="string">&quot;https&quot;</span></span><br><span class="line"></span><br><span class="line">  # Authentication credentials - either API key or username/password.</span><br><span class="line">  #api_key: <span class="string">&quot;id:api_key&quot;</span></span><br><span class="line">  #username: <span class="string">&quot;elastic&quot;</span></span><br><span class="line">  #password: <span class="string">&quot;changeme&quot;</span></span><br></pre></td></tr></table></figure><h3 id="输出到logstash"><a href="#输出到logstash" class="headerlink" title="输出到logstash"></a>输出到logstash</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">output.logstash:</span><br><span class="line">  # The Logstash hosts</span><br><span class="line">  hosts: [<span class="string">&quot;localhost:5044&quot;</span>]</span><br><span class="line">  loadbalance: <span class="keyword">true</span></span><br><span class="line">  # Optional SSL. By <span class="keyword">default</span> is off.</span><br><span class="line">  # List of root certificates <span class="keyword">for</span> HTTPS server verifications</span><br><span class="line">  #ssl.certificate_authorities: [<span class="string">&quot;/etc/pki/root/ca.pem&quot;</span>]</span><br><span class="line"></span><br><span class="line">  # Certificate <span class="keyword">for</span> SSL client authentication</span><br><span class="line">  #ssl.certificate: <span class="string">&quot;/etc/pki/client/cert.pem&quot;</span></span><br><span class="line"></span><br><span class="line">  # Client Certificate Key</span><br><span class="line">  #ssl.key: <span class="string">&quot;/etc/pki/client/cert.key&quot;</span></span><br></pre></td></tr></table></figure><p>其中logstash的配置如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; <span class="number">5044</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    hosts =&gt; [<span class="string">&quot;http://localhost:9200&quot;</span>]</span><br><span class="line">    index =&gt; <span class="string">&quot;%&#123;[@metadata][beat]&#125;-%&#123;[@metadata][version]&#125;&quot;</span> </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Filebeat多文件输入与Logstash样例配置"><a href="#Filebeat多文件输入与Logstash样例配置" class="headerlink" title="Filebeat多文件输入与Logstash样例配置"></a>Filebeat多文件输入与Logstash样例配置</h2><p>此处要点在于Filebeat的fields配置，这个里面可以配置自定义参数传递给<br>Logstash，从而时Logstash可以区分不同类型的数据。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">filebeat.inputs:</span><br><span class="line">- type: log</span><br><span class="line">  enabled: <span class="keyword">true</span></span><br><span class="line">  paths:</span><br><span class="line">    - /<span class="keyword">var</span>/log/nginx<span class="comment">/*.log</span></span><br><span class="line"><span class="comment">  fields:</span></span><br><span class="line"><span class="comment">    log_type: &quot;nginx&quot;</span></span><br><span class="line"><span class="comment">- type: log</span></span><br><span class="line"><span class="comment">  enabled: true</span></span><br><span class="line"><span class="comment">  paths:</span></span><br><span class="line"><span class="comment">    - /var/log/elasticsearch/elasticsearch.log</span></span><br><span class="line"><span class="comment">  fields:</span></span><br><span class="line"><span class="comment">    log_type: &quot;es&quot;</span></span><br></pre></td></tr></table></figure><p>Logstash样例配置如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">   #从filebeat取数据，端口与filebeat配置文件一致</span><br><span class="line">   beats &#123;</span><br><span class="line">     port =&gt; <span class="number">5044</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125; </span><br><span class="line">output &#123;</span><br><span class="line">       # 输出es，这的filetype就是在filebeat那边新增的自定义字段名</span><br><span class="line">       <span class="keyword">if</span> [fields][log_type] == <span class="string">&quot;es&quot;</span> &#123;</span><br><span class="line">         elasticsearch &#123;</span><br><span class="line">            hosts =&gt; [<span class="string">&quot;node1:9200&quot;</span>,<span class="string">&quot;node2:9200&quot;</span>]</span><br><span class="line">            index =&gt; <span class="string">&quot;es-%&#123;+YYYY.MM&#125;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">       &#125; </span><br><span class="line">       <span class="keyword">if</span> [fields][log_type] == <span class="string">&quot;nginx&quot;</span> &#123;</span><br><span class="line">         elasticsearch &#123;</span><br><span class="line">            hosts =&gt; [<span class="string">&quot;node1:9200&quot;</span>,<span class="string">&quot;node2:9200&quot;</span>]</span><br><span class="line">            index =&gt; <span class="string">&quot;nginx-%&#123;+YYYY.MM&#125;&quot;</span></span><br><span class="line">        &#125;       </span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>常用Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>elastic</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>初探Elastic监控组件Metricbeat</title>
    <link href="/2021/09/09/%E5%88%9D%E6%8E%A2Elastic%E7%9B%91%E6%8E%A7%E7%BB%84%E4%BB%B6Metricbeat-chu-tan-elk-jian-kong-zu-jian-metricbeat/"/>
    <url>/2021/09/09/%E5%88%9D%E6%8E%A2Elastic%E7%9B%91%E6%8E%A7%E7%BB%84%E4%BB%B6Metricbeat-chu-tan-elk-jian-kong-zu-jian-metricbeat/</url>
    
    <content type="html"><![CDATA[<h2 id="Metricbeat简介"><a href="#Metricbeat简介" class="headerlink" title="Metricbeat简介"></a>Metricbeat简介</h2><p>从elk 8.x 开始，对elk三个组件+beat组件的监控将由独立组件metricbeat负责。</p><h2 id="Metricbeat初始化"><a href="#Metricbeat初始化" class="headerlink" title="Metricbeat初始化"></a>Metricbeat初始化</h2><p>修改metricbeat.yml中配置参数，把es配置参数修改为自己的ES集群。<br>默认配置如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">output.elasticsearch:</span><br><span class="line">  # Array of hosts to connect to.</span><br><span class="line">  hosts: [<span class="string">&quot;localhost:9200&quot;</span>]</span><br><span class="line"></span><br><span class="line">  # Protocol - either `http` (<span class="keyword">default</span>) or `https`.</span><br><span class="line">  #protocol: <span class="string">&quot;https&quot;</span></span><br><span class="line"></span><br><span class="line">  # Authentication credentials - either API key or username/password.</span><br><span class="line">  #api_key: <span class="string">&quot;id:api_key&quot;</span></span><br><span class="line">  #username: <span class="string">&quot;elastic&quot;</span></span><br><span class="line">  #password: <span class="string">&quot;changeme&quot;</span></span><br></pre></td></tr></table></figure><h2 id="Metricbeat启用监控"><a href="#Metricbeat启用监控" class="headerlink" title="Metricbeat启用监控"></a>Metricbeat启用监控</h2><h3 id="Metricbeat启用elasticsearch监控"><a href="#Metricbeat启用elasticsearch监控" class="headerlink" title="Metricbeat启用elasticsearch监控"></a>Metricbeat启用elasticsearch监控</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">metricbeat.exe modules enable elasticsearch-xpack</span><br></pre></td></tr></table></figure><h3 id="Metricbeat启用logstash监控"><a href="#Metricbeat启用logstash监控" class="headerlink" title="Metricbeat启用logstash监控"></a>Metricbeat启用logstash监控</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">metricbeat modules enable logstash-xpack</span><br><span class="line">metricbeat modules enable logstash</span><br></pre></td></tr></table></figure><h3 id="Metricbeat启用kibana监控"><a href="#Metricbeat启用kibana监控" class="headerlink" title="Metricbeat启用kibana监控"></a>Metricbeat启用kibana监控</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">metricbeat modules enable kibana-xpack</span><br></pre></td></tr></table></figure><h2 id="Metricbeat启动"><a href="#Metricbeat启动" class="headerlink" title="Metricbeat启动"></a>Metricbeat启动</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./metricbeat.exe</span><br></pre></td></tr></table></figure><p>启动成功后，可以在kibana中看到索引metricbeat-*</p><h2 id="Metricbeat监控logstash管道数据"><a href="#Metricbeat监控logstash管道数据" class="headerlink" title="Metricbeat监控logstash管道数据"></a>Metricbeat监控logstash管道数据</h2><p>如果需要查看logstash的管道数据处理量，需要在logstash中相关节点<br>增加Id配置，样例配置如下所示:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">#tcp &#123;</span><br><span class="line">#mode =&gt; <span class="string">&quot;server&quot;</span></span><br><span class="line">#host =&gt; <span class="string">&quot;localhost&quot;</span></span><br><span class="line">#port =&gt; <span class="number">4560</span></span><br><span class="line">#&#125;</span><br><span class="line">file &#123;</span><br><span class="line">    id =&gt; <span class="string">&quot;file_web_log&quot;</span> </span><br><span class="line">        type =&gt; <span class="string">&quot;web_log&quot;</span>                          #类型</span><br><span class="line">        path =&gt; <span class="string">&quot;d:/source.txt&quot;</span>                    #路径</span><br><span class="line">        discover_interval =&gt; <span class="number">10</span>                    #多久检测一次是否有新数据</span><br><span class="line">        start_position =&gt; <span class="string">&quot;beginning&quot;</span>              #采集位置(开始位置)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;[RequestLog]-&quot;</span> in [message] &#123;</span><br><span class="line">grok&#123;</span><br><span class="line">   id =&gt; <span class="string">&quot;grok_web_log&quot;</span> </span><br><span class="line">           match =&gt; &#123;</span><br><span class="line">              <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;\[%&#123;GREEDYDATA:time&#125;\] %&#123;GREEDYDATA:tag1&#125; %&#123;GREEDYDATA:tag2&#125; %&#123;GREEDYDATA:tag3&#125; %&#123;GREEDYDATA:day&#125; %&#123;GREEDYDATA:time&#125; \[%&#123;GREEDYDATA:thread&#125;\]-\[%&#123;GREEDYDATA:logLevel&#125;\]\[%&#123;GREEDYDATA:logType&#125;\]-%&#123;GREEDYDATA:logContent&#125;&quot;</span>  </span><br><span class="line">             &#125;</span><br><span class="line">        &#125;</span><br><span class="line">json &#123;</span><br><span class="line">   id =&gt; <span class="string">&quot;json_web_log&quot;</span> </span><br><span class="line">source =&gt; <span class="string">&quot;logContent&quot;</span></span><br><span class="line">target =&gt; <span class="string">&quot;reqInfo&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">mutate &#123;</span><br><span class="line">   id =&gt; <span class="string">&quot;rmf_web_log&quot;</span> </span><br><span class="line">        remove_field =&gt;  [<span class="string">&quot;logContent&quot;</span>]  </span><br><span class="line">&#125;</span><br><span class="line">mutate &#123;</span><br><span class="line">   id =&gt; <span class="string">&quot;adf_web_log&quot;</span> </span><br><span class="line">add_field =&gt; &#123; <span class="string">&quot;log_type&quot;</span> =&gt; <span class="string">&quot;portal-biz-log&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">mutate &#123;</span><br><span class="line">   id =&gt; <span class="string">&quot;adt_web_log&quot;</span> </span><br><span class="line">add_field =&gt; &#123; <span class="string">&quot;log_type&quot;</span> =&gt; <span class="string">&quot;text-log&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line"><span class="keyword">if</span> [log_type] == <span class="string">&quot;portal-biz-log&quot;</span> &#123;</span><br><span class="line">elasticsearch &#123;</span><br><span class="line">   id =&gt; <span class="string">&quot;es_web_log&quot;</span> </span><br><span class="line">action =&gt; <span class="string">&quot;index&quot;</span></span><br><span class="line">hosts =&gt; <span class="string">&quot;localhost:9200&quot;</span></span><br><span class="line">index =&gt; <span class="string">&quot;portal-biz-log-%&#123;+YYYY.MM.dd&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">elasticsearch &#123;</span><br><span class="line">   id =&gt; <span class="string">&quot;estxt_web_log&quot;</span> </span><br><span class="line">action =&gt; <span class="string">&quot;index&quot;</span></span><br><span class="line">hosts =&gt; <span class="string">&quot;localhost:9200&quot;</span></span><br><span class="line">index =&gt; <span class="string">&quot;text-log-%&#123;+YYYY.MM.dd&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启用ID参数后，在监控页面可以看到如下图所示细节:<br><img src="https://www.mycitymemory.com/upload/2021/09/20210909171439-ac5b5d2541034a27af9401940ae986ea.jpg" alt="20210909171439.jpg"></p><h2 id="Metricbeat监控Kibana"><a href="#Metricbeat监控Kibana" class="headerlink" title="Metricbeat监控Kibana"></a>Metricbeat监控Kibana</h2><p>当使用Metricbeat监控Kibana时，需要关闭Kibana自身的监控。<br>编辑配置文件kibana.yml，增加如下配置，并重启Kibana</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">i18n.locale: <span class="string">&quot;zh-CN&quot;</span> #kibana启用中文</span><br><span class="line">monitoring.kibana.collection.enabled: <span class="keyword">false</span></span><br></pre></td></tr></table></figure><h2 id="Elasticsearch启用kibana监控"><a href="#Elasticsearch启用kibana监控" class="headerlink" title="Elasticsearch启用kibana监控"></a>Elasticsearch启用kibana监控</h2><p>编辑配置elasticsearch.yml,启用如下配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xpack.monitoring.collection.enabled: <span class="keyword">true</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>常用Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>elastic</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>聊聊Logstash的常用配置</title>
    <link href="/2021/09/03/%E8%81%8A%E8%81%8ALogstash%E7%9A%84%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE-liao-liao-logstash-de-chang-yong-pei-zhi/"/>
    <url>/2021/09/03/%E8%81%8A%E8%81%8ALogstash%E7%9A%84%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE-liao-liao-logstash-de-chang-yong-pei-zhi/</url>
    
    <content type="html"><![CDATA[<h2 id="input"><a href="#input" class="headerlink" title="input"></a>input</h2><p>此处可以理解为数据源定义，数据源可以是logstash作为服务端接口日志，也可以作为采集端进行采集日志。下面部分举例说明：</p><h3 id="Logstash作为日志服务端"><a href="#Logstash作为日志服务端" class="headerlink" title="Logstash作为日志服务端"></a>Logstash作为日志服务端</h3><p>例如，可以使用logback将日志内容直接传给logstash,下面是Logstash的部分配置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">tcp &#123;</span><br><span class="line">mode =&gt; <span class="string">&quot;server&quot;</span></span><br><span class="line">host =&gt; <span class="string">&quot;localhost&quot;</span></span><br><span class="line">port =&gt; <span class="number">4560</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Logback需要在pom中先引入以下依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.logstash.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logstash-logback-encoder<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Logback配置如下:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">debug</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--读取yml配置文件内的变量(logs.path)--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProperty</span> <span class="attr">scope</span>=<span class="string">&quot;context&quot;</span> <span class="attr">name</span>=<span class="string">&quot;logFilePath&quot;</span> <span class="attr">source</span>=<span class="string">&quot;logs.path&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProperty</span> <span class="attr">scope</span>=<span class="string">&quot;context&quot;</span> <span class="attr">name</span>=<span class="string">&quot;appName&quot;</span> <span class="attr">source</span>=<span class="string">&quot;spring.application.name&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProperty</span> <span class="attr">scope</span>=<span class="string">&quot;context&quot;</span> <span class="attr">name</span>=<span class="string">&quot;logstashServer&quot;</span> <span class="attr">source</span>=<span class="string">&quot;logs.logstashServer&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 彩色日志 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 彩色日志依赖的渲染类 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">conversionRule</span> <span class="attr">conversionWord</span>=<span class="string">&quot;clr&quot;</span> <span class="attr">converterClass</span>=<span class="string">&quot;org.springframework.boot.logging.logback.ColorConverter&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">conversionRule</span> <span class="attr">conversionWord</span>=<span class="string">&quot;wex&quot;</span> <span class="attr">converterClass</span>=<span class="string">&quot;org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">conversionRule</span> <span class="attr">conversionWord</span>=<span class="string">&quot;wEx&quot;</span> <span class="attr">converterClass</span>=<span class="string">&quot;org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 彩色日志格式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;CONSOLE_LOG_PATTERN&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;CONSOLE_LOG_PATTERN:-%clr(%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;)&#123;faint&#125; %clr($&#123;LOG_LEVEL_PATTERN:-%5p&#125;) %clr($&#123;PID:- &#125;)&#123;magenta&#125; %clr(---)&#123;faint&#125; %clr([%15.15t])&#123;faint&#125; %clr(%-40.40logger&#123;39&#125;)&#123;cyan&#125; %clr(:)&#123;faint&#125; %m%n$&#123;LOG_EXCEPTION_CONVERSION_WORD:-%wEx&#125;&#125;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;FILE_LOG_PATTERN&quot;</span> <span class="attr">value</span>=<span class="string">&quot;%-12(%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;) |-%-5level [%thread] %c [%L] -| %msg%n&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 控制台彩色日志输出 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;CONSOLE&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;CONSOLE_LOG_PATTERN&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>utf8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 按照每天生成日志文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;FILE&quot;</span>  <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">File</span>&gt;</span>$&#123;logFilePath&#125;/SmartPro.log<span class="tag">&lt;/<span class="name">File</span>&gt;</span><span class="comment">&lt;!--不指定会出现Linux无法输出文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--日志文件输出的文件名--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">FileNamePattern</span>&gt;</span>$&#123;logFilePath&#125;/SmartPro.log.%d&#123;yyyy-MM-dd&#125;.log<span class="tag">&lt;/<span class="name">FileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--日志文件保留天数--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">MaxHistory</span>&gt;</span>30<span class="tag">&lt;/<span class="name">MaxHistory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.classic.encoder.PatternLayoutEncoder&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;FILE_LOG_PATTERN&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--日志文件最大的大小--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">triggeringPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">MaxFileSize</span>&gt;</span>10MB<span class="tag">&lt;/<span class="name">MaxFileSize</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">triggeringPolicy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--日志输出到LOGSTASH--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;LOGSTASH&quot;</span>  <span class="attr">class</span>=<span class="string">&quot;net.logstash.logback.appender.LogstashTcpSocketAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">destination</span>&gt;</span>$&#123;logstashServer&#125;<span class="tag">&lt;/<span class="name">destination</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- encoder必须配置,有多种可选 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> <span class="attr">class</span>=<span class="string">&quot;net.logstash.logback.encoder.LogstashEncoder&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">customFields</span>&gt;</span>&#123;&quot;appname&quot;:&quot;$&#123;appName&#125;&quot;&#125;<span class="tag">&lt;/<span class="name">customFields</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">connectionStrategy</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">roundRobin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">connectionTTL</span>&gt;</span>5 minutes<span class="tag">&lt;/<span class="name">connectionTTL</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">roundRobin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">connectionStrategy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;com.baidu&quot;</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 日志输出级别 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;CONSOLE&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;FILE&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;LOGSTASH&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注：<br>此处由于部分参数是使用的SpringBoot的配置文件中的配置参数，因此建议<br>logback的文件名为logback-spring.xml</p><p>spring boot的配置参数如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">logs:</span><br><span class="line">  path: <span class="string">&#x27;d:/ELK/&#x27;</span> #本地文件存储路径</span><br><span class="line">  logstashServer: <span class="string">&#x27;localhost:4560&#x27;</span> #logstash采集器地址</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>弊端：如果Logstash停止，控制台会不断打印异常日志，但是不影响应用使用。</p><h3 id="Logstash作为日志采集服务"><a href="#Logstash作为日志采集服务" class="headerlink" title="Logstash作为日志采集服务"></a>Logstash作为日志采集服务</h3><p>此处只贴配置参数了，内容很好理解。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">file &#123;</span><br><span class="line">        type =&gt; <span class="string">&quot;web_log&quot;</span>                          #类型</span><br><span class="line">        path =&gt; <span class="string">&quot;d:/source.txt&quot;</span>                    #路径</span><br><span class="line">        discover_interval =&gt; <span class="number">10</span>                    #多久检测一次是否有新数据</span><br><span class="line">        start_position =&gt; <span class="string">&quot;beginning&quot;</span>              #采集位置(开始位置)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h2><p>此处和Java中的过滤器有异曲同工之妙，但是功能更为强大，可以在日志<br>在存入ES之前，对日志进行格式匹配，字段拆分和字段数据格式化能个性化操作。<br>此处只贴出部分样例配置，更为复杂的使用可以自己参考官方文档实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">filter &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;[RequestLog]-&quot;</span> in [message] &#123; #message字段中包含关键字[RequestLog]-</span><br><span class="line">grok&#123;</span><br><span class="line">           match =&gt; &#123; #进行格式匹配</span><br><span class="line">              <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;\[%&#123;GREEDYDATA:time&#125;\] %&#123;GREEDYDATA:tag1&#125; %&#123;GREEDYDATA:tag2&#125; %&#123;GREEDYDATA:tag3&#125; %&#123;GREEDYDATA:day&#125; %&#123;GREEDYDATA:time&#125; \[%&#123;GREEDYDATA:thread&#125;\]-\[%&#123;GREEDYDATA:logLevel&#125;\]\[%&#123;GREEDYDATA:logType&#125;\]-%&#123;GREEDYDATA:logContent&#125;&quot;</span>  </span><br><span class="line">             &#125;</span><br><span class="line">        &#125;</span><br><span class="line">json &#123; #对字段logContent进行JSON格式化处理</span><br><span class="line">source =&gt; <span class="string">&quot;logContent&quot;</span></span><br><span class="line">target =&gt; <span class="string">&quot;reqInfo&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">mutate &#123; #删除字段</span><br><span class="line">        remove_field =&gt;  [<span class="string">&quot;logContent&quot;</span>]  </span><br><span class="line">&#125;</span><br><span class="line">mutate &#123; #添加类型标识</span><br><span class="line">add_field =&gt; &#123; <span class="string">&quot;log_type&quot;</span> =&gt; <span class="string">&quot;portal-biz-log&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">mutate &#123;</span><br><span class="line">add_field =&gt; &#123; <span class="string">&quot;log_type&quot;</span> =&gt; <span class="string">&quot;text-log&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="output"><a href="#output" class="headerlink" title="output"></a>output</h2><p>此处主要是将输出进行数据，可以输出为文件，也可以直接输入到ES里面。<br>此处只给出常用的ES样例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">output &#123;</span><br><span class="line"><span class="keyword">if</span> [log_type] == <span class="string">&quot;portal-biz-log&quot;</span> &#123;</span><br><span class="line">elasticsearch &#123;</span><br><span class="line">action =&gt; <span class="string">&quot;index&quot;</span></span><br><span class="line">hosts =&gt; <span class="string">&quot;localhost:9200&quot;</span></span><br><span class="line">index =&gt; <span class="string">&quot;portal-biz-log-%&#123;+YYYY.MM.dd&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">elasticsearch &#123;</span><br><span class="line">action =&gt; <span class="string">&quot;index&quot;</span></span><br><span class="line">hosts =&gt; <span class="string">&quot;localhost:9200&quot;</span></span><br><span class="line">index =&gt; <span class="string">&quot;text-log-%&#123;+YYYY.MM.dd&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Logstash多种类型输入时如何区分输出"><a href="#Logstash多种类型输入时如何区分输出" class="headerlink" title="Logstash多种类型输入时如何区分输出"></a>Logstash多种类型输入时如何区分输出</h2><p>此处最核心的地方就是在输入端通过添加type字段，在filter时添加tag,在out时通过tag来区分不同输入，样例配置文件如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">  file &#123;</span><br><span class="line">    path =&gt; <span class="string">&quot;/data/multi-input/apache.log&quot;</span></span><br><span class="line">      start_position =&gt; <span class="string">&quot;beginning&quot;</span></span><br><span class="line">    sincedb_path =&gt; <span class="string">&quot;/dev/null&quot;</span></span><br><span class="line">    # ignore_older =&gt; <span class="number">100000</span></span><br><span class="line">    type =&gt; <span class="string">&quot;apache&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">input &#123;</span><br><span class="line">  file &#123;</span><br><span class="line">    path =&gt; <span class="string">&quot;/data/multi-input/apache-daily-access.log&quot;</span></span><br><span class="line">    start_position =&gt; <span class="string">&quot;beginning&quot;</span></span><br><span class="line">    sincedb_path =&gt; <span class="string">&quot;/dev/null&quot;</span></span><br><span class="line">    type =&gt; <span class="string">&quot;daily&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">filter &#123;     </span><br><span class="line">    <span class="keyword">if</span>[type] == <span class="string">&quot;apache&quot;</span> &#123;</span><br><span class="line">        mutate &#123;</span><br><span class="line">              add_tag =&gt; [<span class="string">&quot;apache&quot;</span>]</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> [type] == <span class="string">&quot;daily&quot;</span> &#123;</span><br><span class="line">        mutate &#123;</span><br><span class="line">            add_tag =&gt; [<span class="string">&quot;daily&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line">output &#123;</span><br><span class="line">    stdout &#123;</span><br><span class="line">        codec =&gt; rubydebug</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;apache&quot;</span> in [tags] &#123;</span><br><span class="line">          elasticsearch &#123;</span><br><span class="line">            index =&gt; <span class="string">&quot;apache_log&quot;</span></span><br><span class="line">            template =&gt; <span class="string">&quot;/data/apache_template.json&quot;</span></span><br><span class="line">            template_name =&gt; <span class="string">&quot;apache_elastic_example&quot;</span></span><br><span class="line">            template_overwrite =&gt; <span class="keyword">true</span></span><br><span class="line">      &#125;    </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;daily&quot;</span> in [tags] &#123;</span><br><span class="line">          elasticsearch &#123;</span><br><span class="line">            index =&gt; <span class="string">&quot;apache_daily&quot;</span></span><br><span class="line">            template =&gt; <span class="string">&quot;/data/apache_template.json&quot;</span></span><br><span class="line">            template_name =&gt; <span class="string">&quot;apache_elastic_example&quot;</span></span><br><span class="line">            template_overwrite =&gt; <span class="keyword">true</span></span><br><span class="line">      &#125;    </span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>常用Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>elastic</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>聊聊Logstash的Grok正则匹配</title>
    <link href="/2021/09/03/%E8%81%8A%E8%81%8ALogstash%E7%9A%84Grok%E6%AD%A3%E5%88%99%E5%8C%B9%E9%85%8D-liao-liao-logstash-de-grok-zheng-ze-pi-pei/"/>
    <url>/2021/09/03/%E8%81%8A%E8%81%8ALogstash%E7%9A%84Grok%E6%AD%A3%E5%88%99%E5%8C%B9%E9%85%8D-liao-liao-logstash-de-grok-zheng-ze-pi-pei/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>由于Logstash内置了很多正则表达式，以至于很多人在使用的时候容易教条主义，死搬硬套，导致想用Logstash按照自定义格式解析时，网上基本上很难找到符合自己要求的grok表达式。<br>但是grok正则表达式，底层就是按照普通的正则表达式进行数据匹配而已，此时你只要拥有拆分问题的思维，那么再复杂的格式，也可以通过拆分观念来拆解成自己想要的格式。</p><h2 id="手写Grok-告别无效搜索"><a href="#手写Grok-告别无效搜索" class="headerlink" title="手写Grok,告别无效搜索"></a>手写Grok,告别无效搜索</h2><p>下面将以一段格式复杂的Web中间件日志来进行拆解思路讲解分享。</p><p><strong>1）样例日志</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">9</span>/<span class="number">3</span>/<span class="number">21</span> <span class="number">10</span>:<span class="number">26</span>:<span class="number">54</span>:<span class="number">274</span> CST] 0000005a SystemOut O <span class="number">2021</span>-09-<span class="number">03</span> <span class="number">10</span>:<span class="number">26</span>:<span class="number">54</span> [com.baidu.portal.utils.http.HttpUtil sendPostJson <span class="number">846</span>]-[INFO][RequestLog]-&#123;<span class="string">&quot;currentUser&quot;</span>:<span class="string">&quot;Default&quot;</span>,<span class="string">&quot;httpMethod&quot;</span>:<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;level&quot;</span>:<span class="string">&quot;sys-biz&quot;</span>,<span class="string">&quot;module&quot;</span>:<span class="string">&quot;Order&quot;</span>,<span class="string">&quot;reqInfo&quot;</span>:<span class="string">&quot;-&quot;</span>,<span class="string">&quot;reqSourceIp&quot;</span>:<span class="string">&quot;0:0:0:0:0:0:0:1&quot;</span>,<span class="string">&quot;reqTime&quot;</span>:<span class="string">&quot;2021-09-03 10:55:32&quot;</span>,<span class="string">&quot;reqUrl&quot;</span>:<span class="string">&quot;/data/queryByPage&quot;</span>,<span class="string">&quot;respInfo&quot;</span>:<span class="string">&quot;&#123;\&quot;code\&quot;:\&quot;200\&quot;,\&quot;data\&quot;:&#123;\&quot;optimizeCountSql\&quot;:true,\&quot;records\&quot;:[&#123;\&quot;serialNumber\&quot;:\&quot;wmh2021060710348585\&quot;,\&quot;businessTypes\&quot;:\&quot;7\&quot;,\&quot;id\&quot;:11177&#125;,&#123;\&quot;serialNumber\&quot;:\&quot;wmh2021060710349253\&quot;,\&quot;businessTypes\&quot;:\&quot;2\&quot;,\&quot;id\&quot;:11178&#125;,&#123;\&quot;serialNumber\&quot;:\&quot;wmh2021060710350107\&quot;,\&quot;businessTypes\&quot;:\&quot;5\&quot;,\&quot;id\&quot;:11179&#125;,&#123;\&quot;serialNumber\&quot;:\&quot;wmh2021060810348855\&quot;,\&quot;businessTypes\&quot;:\&quot;2\&quot;,\&quot;id\&quot;:11180&#125;,&#123;\&quot;serialNumber\&quot;:\&quot;wmh2021060810348954\&quot;,\&quot;businessTypes\&quot;:\&quot;5\&quot;,\&quot;id\&quot;:11181&#125;],\&quot;searchCount\&quot;:true,\&quot;total\&quot;:5,\&quot;current\&quot;:1,\&quot;size\&quot;:10,\&quot;orders\&quot;:[]&#125;,\&quot;message\&quot;:\&quot;success\&quot;&#125;&quot;</span>,<span class="string">&quot;respStatusCode&quot;</span>:<span class="number">200</span>,<span class="string">&quot;respTime&quot;</span>:<span class="string">&quot;2021-09-03 10:55:32&quot;</span>,<span class="string">&quot;tips&quot;</span>:<span class="string">&quot;分页查询订单&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p><strong>2）认识GREEDYDATA</strong><br>GREEDYDATA是Logstash内置的一个正则规则，大致意思就是他可以代表任意字符串，具体正则内容可以自行去了解。</p><p><strong>3）Grok对特殊符号的处理</strong><br>此处需要特殊说明下，Grok对于特殊符号的匹配需要添加转义符，<br>例如,你想获取如下示例中的日期，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">2021</span>-<span class="number">03</span>-<span class="number">21</span>] GET /index.html</span><br></pre></td></tr></table></figure><p>grok得按照如下的方式来写：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\[%&#123;GREEDYDATA:time&#125;\] %&#123;GREEDYDATA:metord&#125; %&#123;GREEDYDATA:path&#125;</span><br></pre></td></tr></table></figure><p><strong>4）拆解复杂日志</strong></p><p>步骤3已经给出了思路和案例，说白了就是一个大段代表一个含义的情况下，优先按照大段进行拆分，尽量把同一个含义的数据拆分到一起。针对文章开头的案例数据，我们可以拆分成如下的格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\[%&#123;GREEDYDATA:time&#125;\] %&#123;GREEDYDATA:tag1&#125; %&#123;GREEDYDATA:tag2&#125; %&#123;GREEDYDATA:tag3&#125; %&#123;GREEDYDATA:day&#125; %&#123;GREEDYDATA:time&#125; \[%&#123;GREEDYDATA:thread&#125;\]-\[%&#123;GREEDYDATA:logLevel&#125;\]\[%&#123;GREEDYDATA:logType&#125;\]-%&#123;GREEDYDATA:logContent&#125;</span><br></pre></td></tr></table></figure><p>grok表达式使用Kibana的Dev Tool 解析结果如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;logType&quot;</span>: <span class="string">&quot;RequestLog&quot;</span>,</span><br><span class="line">  <span class="string">&quot;tag1&quot;</span>: <span class="string">&quot;0000005a&quot;</span>,</span><br><span class="line">  <span class="string">&quot;logContent&quot;</span>: <span class="string">&quot;&#123;\&quot;currentUser\&quot;:\&quot;Default\&quot;,\&quot;httpMethod\&quot;:\&quot;GET\&quot;,\&quot;level\&quot;:\&quot;sys-biz\&quot;,\&quot;module\&quot;:\&quot;Order\&quot;,\&quot;reqInfo\&quot;:\&quot;-\&quot;,\&quot;reqSourceIp\&quot;:\&quot;0:0:0:0:0:0:0:1\&quot;,\&quot;reqTime\&quot;:\&quot;2021-09-03 10:55:32\&quot;,\&quot;reqUrl\&quot;:\&quot;/data/queryByPage\&quot;,\&quot;respInfo\&quot;:\&quot;&#123;\\\&quot;code\\\&quot;:\\\&quot;200\\\&quot;,\\\&quot;data\\\&quot;:&#123;\\\&quot;optimizeCountSql\\\&quot;:true,\\\&quot;records\\\&quot;:[&#123;\\\&quot;serialNumber\\\&quot;:\\\&quot;wmh2021060710348585\\\&quot;,\\\&quot;businessTypes\\\&quot;:\\\&quot;7\\\&quot;,\\\&quot;id\\\&quot;:11177&#125;,&#123;\\\&quot;serialNumber\\\&quot;:\\\&quot;wmh2021060710349253\\\&quot;,\\\&quot;businessTypes\\\&quot;:\\\&quot;2\\\&quot;,\\\&quot;id\\\&quot;:11178&#125;,&#123;\\\&quot;serialNumber\\\&quot;:\\\&quot;wmh2021060710350107\\\&quot;,\\\&quot;businessTypes\\\&quot;:\\\&quot;5\\\&quot;,\\\&quot;id\\\&quot;:11179&#125;,&#123;\\\&quot;serialNumber\\\&quot;:\\\&quot;wmh2021060810348855\\\&quot;,\\\&quot;businessTypes\\\&quot;:\\\&quot;2\\\&quot;,\\\&quot;id\\\&quot;:11180&#125;,&#123;\\\&quot;serialNumber\\\&quot;:\\\&quot;wmh2021060810348954\\\&quot;,\\\&quot;businessTypes\\\&quot;:\\\&quot;5\\\&quot;,\\\&quot;id\\\&quot;:11181&#125;],\\\&quot;searchCount\\\&quot;:true,\\\&quot;total\\\&quot;:5,\\\&quot;current\\\&quot;:1,\\\&quot;size\\\&quot;:10,\\\&quot;orders\\\&quot;:[]&#125;,\\\&quot;message\\\&quot;:\\\&quot;success\\\&quot;&#125;\&quot;,\&quot;respStatusCode\&quot;:200,\&quot;respTime\&quot;:\&quot;2021-09-03 10:55:32\&quot;,\&quot;tips\&quot;:\&quot;分页查询订单\&quot;&#125;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;thread&quot;</span>: <span class="string">&quot;com.baidu.portal.utils.http.HttpUtil sendPostJson 846&quot;</span>,</span><br><span class="line">  <span class="string">&quot;tag2&quot;</span>: <span class="string">&quot;SystemOut&quot;</span>,</span><br><span class="line">  <span class="string">&quot;tag3&quot;</span>: <span class="string">&quot;O&quot;</span>,</span><br><span class="line">  <span class="string">&quot;logLevel&quot;</span>: <span class="string">&quot;INFO&quot;</span>,</span><br><span class="line">  <span class="string">&quot;time&quot;</span>: <span class="string">&quot;9/3/21 10:26:54:274 CST&quot;</span>,</span><br><span class="line">  <span class="string">&quot;day&quot;</span>: <span class="string">&quot;2021-09-03&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通俗易懂，简单明了的就可以完成日志的分字段采集入库了。</p>]]></content>
    
    
    <categories>
      
      <category>常用Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>elastic</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>聊聊Elasticsearch 常见问题</title>
    <link href="/2021/08/31/%E8%81%8A%E8%81%8AElasticsearch%20%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98-liao-liao-elasticsearchchang-jian-wen-ti/"/>
    <url>/2021/08/31/%E8%81%8A%E8%81%8AElasticsearch%20%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98-liao-liao-elasticsearchchang-jian-wen-ti/</url>
    
    <content type="html"><![CDATA[<h2 id="1-elasticsearch-索引状态yellow问题解决"><a href="#1-elasticsearch-索引状态yellow问题解决" class="headerlink" title="1.elasticsearch 索引状态yellow问题解决"></a>1.elasticsearch 索引状态yellow问题解决</h2><p>GET _cluster/health<br>执行结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;cluster_name&quot;</span> : <span class="string">&quot;dev&quot;</span>,</span><br><span class="line">  <span class="string">&quot;status&quot;</span> : <span class="string">&quot;yellow&quot;</span>,</span><br><span class="line">  <span class="string">&quot;timed_out&quot;</span> : <span class="keyword">false</span>,</span><br><span class="line">  <span class="string">&quot;number_of_nodes&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="string">&quot;number_of_data_nodes&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="string">&quot;active_primary_shards&quot;</span> : <span class="number">36</span>,</span><br><span class="line">  <span class="string">&quot;active_shards&quot;</span> : <span class="number">36</span>,</span><br><span class="line">  <span class="string">&quot;relocating_shards&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;initializing_shards&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;unassigned_shards&quot;</span> : <span class="number">60</span>,</span><br><span class="line">  <span class="string">&quot;delayed_unassigned_shards&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;number_of_pending_tasks&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;number_of_in_flight_fetch&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;task_max_waiting_in_queue_millis&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;active_shards_percent_as_number&quot;</span> : <span class="number">37.5</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>状态为yellow,副本分片数2</p><p>GET /index/_settings</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;index&quot;</span> : &#123;</span><br><span class="line">    <span class="string">&quot;settings&quot;</span> : &#123;</span><br><span class="line">      <span class="string">&quot;index&quot;</span> : &#123;</span><br><span class="line">        <span class="string">&quot;number_of_shards&quot;</span> : <span class="string">&quot;30&quot;</span>,</span><br><span class="line">        <span class="string">&quot;provided_name&quot;</span> : <span class="string">&quot;product_dev&quot;</span>,</span><br><span class="line">        <span class="string">&quot;max_result_window&quot;</span> : <span class="string">&quot;2147483647&quot;</span>,</span><br><span class="line">        <span class="string">&quot;creation_date&quot;</span> : <span class="string">&quot;1611582359306&quot;</span>,</span><br><span class="line">        <span class="string">&quot;number_of_replicas&quot;</span> : <span class="string">&quot;2&quot;</span>,</span><br><span class="line">        <span class="string">&quot;uuid&quot;</span> : <span class="string">&quot;l7eYTZHsQkCF0Z4iquGG7w&quot;</span>,</span><br><span class="line">        <span class="string">&quot;version&quot;</span> : &#123;</span><br><span class="line">          <span class="string">&quot;created&quot;</span> : <span class="string">&quot;7050299&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在单机情况下是不需要设置副本分区数。调整副本分区数为0，就🆗</p><p>PUT  /_settings</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123; </span><br><span class="line"> <span class="string">&quot;number_of_replicas&quot;</span>:<span class="number">0</span>,</span><br><span class="line"> <span class="string">&quot;auto_expand_replicas&quot;</span>: <span class="keyword">false</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看下状态，status已经为green</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;cluster_name&quot;</span> : <span class="string">&quot;dev&quot;</span>,</span><br><span class="line">  <span class="string">&quot;status&quot;</span> : <span class="string">&quot;green&quot;</span>,</span><br><span class="line">  <span class="string">&quot;timed_out&quot;</span> : <span class="keyword">false</span>,</span><br><span class="line">  <span class="string">&quot;number_of_nodes&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="string">&quot;number_of_data_nodes&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="string">&quot;active_primary_shards&quot;</span> : <span class="number">36</span>,</span><br><span class="line">  <span class="string">&quot;active_shards&quot;</span> : <span class="number">36</span>,</span><br><span class="line">  <span class="string">&quot;relocating_shards&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;initializing_shards&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;unassigned_shards&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;delayed_unassigned_shards&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;number_of_pending_tasks&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;number_of_in_flight_fetch&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;task_max_waiting_in_queue_millis&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;active_shards_percent_as_number&quot;</span> : <span class="number">100.0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>也可以在配置文件 elasticsearch.yml 中进行修改（ES 5.x及以前）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">index.number_of_shards:</span><br><span class="line">设置默认索引分片个数，默认为<span class="number">1</span>片。索引分片对ES的查询性能有很大的影响，在应用环境，应该选择适合的分片大小。</span><br><span class="line">index.number_of_replicas:</span><br><span class="line">设置默认索引副本个数，默认为<span class="number">1</span>个副本。此处的<span class="number">1</span>个副本是指index.number_of_shards的一个完全拷贝；如果有<span class="number">5</span>个主分片<span class="number">1</span>个副本分片，即总分片数为<span class="number">10</span>。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-elasticsearch-出现-cluster-block-exception-read-only-allow-delete问题"><a href="#2-elasticsearch-出现-cluster-block-exception-read-only-allow-delete问题" class="headerlink" title="2.elasticsearch 出现 cluster_block_exception read_only_allow_delete问题"></a>2.elasticsearch 出现 cluster_block_exception read_only_allow_delete问题</h2><p>提示的错误：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logstash.outputs.elasticsearch] retrying failed action with response code: <span class="number">403</span> (&#123;<span class="string">&quot;type&quot;</span>=&gt;<span class="string">&quot;cluster_block_exception&quot;</span>, <span class="string">&quot;reason&quot;</span>=&gt;<span class="string">&quot;blocked by: [FORBIDDEN/12/index read-only / allow delete (api)]</span></span><br></pre></td></tr></table></figure><p>这是由于ES新节点的数据目录data存储空间不足，导致从master主节点接收同步数据的时候失败，此时ES集群为了保护数据，会自动把索引分片index置为只读read-only</p><p>解决方法：</p><p>1 磁盘扩容，可在配置文件中修改ES数据存储目录，重启ES<br>2 2.放开索引只读设置，在服务器上通过curl工具发起PUT请求<br>PUT _settings</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;index&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;blocks&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;read_only_allow_delete&quot;</span>: <span class="string">&quot;false&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>常用Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>elastic</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>聊聊Nginx日志分割的两种技巧</title>
    <link href="/2021/08/26/%E8%81%8A%E8%81%8ANginx%E6%97%A5%E5%BF%97%E5%88%86%E5%89%B2%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%8A%80%E5%B7%A7-liao-liao-nginx-ri-zhi-fen-ge-de-liang-zhong-ji-qiao/"/>
    <url>/2021/08/26/%E8%81%8A%E8%81%8ANginx%E6%97%A5%E5%BF%97%E5%88%86%E5%89%B2%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%8A%80%E5%B7%A7-liao-liao-nginx-ri-zhi-fen-ge-de-liang-zhong-ji-qiao/</url>
    
    <content type="html"><![CDATA[<h2 id="1-Nginx-Access-Log按天分割"><a href="#1-Nginx-Access-Log按天分割" class="headerlink" title="1.Nginx Access Log按天分割"></a>1.Nginx Access Log按天分割</h2><p>在HTTP配置段，增加如下配置，即可实现按天分割<br>Tengine version: Tengine/2.3.3+<br>nginx version: nginx/1.18.0+</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">access_log  logs/access-$year-$month-$day.log  main;</span><br></pre></td></tr></table></figure><p>配置好以后，重启Nginx，然后再访问Nginx，Nginx的访问日志就开始以天为单位进行创建了。</p><h2 id="2-Nginx-Log按天自动打包"><a href="#2-Nginx-Log按天自动打包" class="headerlink" title="2.Nginx Log按天自动打包"></a>2.Nginx Log按天自动打包</h2><p>按天打包可以将Nginx的AccessLog和ErrorLog都以操作系统定时任务的形式，按天进行打包。打包脚本如下(自己写操作系统定时任务)：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># /bin/bash</span><br><span class="line"># 自动将昨天的访问日志和错误日志切割出来并打包成一个zip文件</span><br><span class="line">#增量日志存储目录</span><br><span class="line">logs_path=<span class="string">&quot;/nginx/logs/&quot;</span></span><br><span class="line"></span><br><span class="line">#以前的日志文件。</span><br><span class="line">log_name=<span class="string">&quot;access.log&quot;</span>   </span><br><span class="line">log_old_name=<span class="string">&quot;access&quot;</span></span><br><span class="line"></span><br><span class="line">log_error=<span class="string">&quot;error.log&quot;</span></span><br><span class="line">log_old_error=<span class="string">&quot;error&quot;</span></span><br><span class="line">#Nginx进程ID文件</span><br><span class="line">pid_path=<span class="string">&quot;/nginx/logs/nginx.pid&quot;</span></span><br><span class="line"></span><br><span class="line">#移动文件</span><br><span class="line">mv $&#123;logs_path&#125;$&#123;log_name&#125; $&#123;logs_path&#125;$&#123;log_old_name&#125;_$(date --date=<span class="string">&quot;-1 day&quot;</span> +<span class="string">&quot;%Y-%m-%d&quot;</span>).log</span><br><span class="line">mv $&#123;logs_path&#125;$&#123;log_error&#125; $&#123;logs_path&#125;$&#123;log_old_error&#125;_$(date --date=<span class="string">&quot;-1 day&quot;</span> +<span class="string">&quot;%Y-%m-%d&quot;</span>).log</span><br><span class="line">#打包文件</span><br><span class="line">zip -m -r -j $&#123;logs_path&#125;$&#123;log_old_name&#125;_$(date --date=<span class="string">&quot;-1 day&quot;</span> +<span class="string">&quot;%Y-%m-%d&quot;</span>).zip $&#123;logs_path&#125;$&#123;log_old_name&#125;_$(date --date=<span class="string">&quot;-1 day&quot;</span> +<span class="string">&quot;%Y-%m-%d&quot;</span>).log </span><br><span class="line">zip -m -j $&#123;logs_path&#125;$&#123;log_old_name&#125;_$(date --date=<span class="string">&quot;-1 day&quot;</span> +<span class="string">&quot;%Y-%m-%d&quot;</span>).zip $&#123;logs_path&#125;$&#123;log_old_error&#125;_$(date --date=<span class="string">&quot;-1 day&quot;</span> +<span class="string">&quot;%Y-%m-%d&quot;</span>).log </span><br><span class="line"></span><br><span class="line">echo <span class="string">&quot;=======================ngix logs package success=========================&quot;</span></span><br><span class="line">kill -USR1 `cat $&#123;pid_path&#125;`</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>常用Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nmap常用命令</title>
    <link href="/2021/08/25/Nmap%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4-nmap%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2021/08/25/Nmap%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4-nmap%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="下载安装NMAP"><a href="#下载安装NMAP" class="headerlink" title="下载安装NMAP"></a>下载安装NMAP</h2><p><a href="https://nmap.org/dist/nmap-7.92-setup.exe">https://nmap.org/dist/nmap-7.92-setup.exe</a></p><h2 id="1-Https密钥长度符合性检测"><a href="#1-Https密钥长度符合性检测" class="headerlink" title="1.Https密钥长度符合性检测"></a>1.Https密钥长度符合性检测</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script ssl-<span class="class"><span class="keyword">enum</span>-<span class="title">ciphers</span> -<span class="title">p</span> <span class="title">port</span> <span class="title">ip</span></span></span><br></pre></td></tr></table></figure><p>举例如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script ssl-<span class="class"><span class="keyword">enum</span>-<span class="title">ciphers</span> -<span class="title">p</span> 443 10.0.0.1</span></span><br></pre></td></tr></table></figure><h2 id="2-Banner探测命令"><a href="#2-Banner探测命令" class="headerlink" title="2.Banner探测命令"></a>2.Banner探测命令</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sY ip -p port --script=banner.nse</span><br></pre></td></tr></table></figure><p>举例如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sY <span class="number">10.0</span><span class="number">.0</span><span class="number">.1</span> -p <span class="number">443</span> --script=banner.nse</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>白话安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>聊聊浏览器缓存（Cache-Control、max-age和Expires、Etag和Last-Modified）</title>
    <link href="/2021/08/17/%E8%81%8A%E8%81%8A%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BC%93%E5%AD%98%EF%BC%88Cache-Control%E3%80%81max-age%E5%92%8CExpires%E3%80%81Etag%E5%92%8CLast-Modified%EF%BC%89-liao-liao-liu-lan-qi-huan-cun-cache-controlmax-age-he-expiresetag-he-last-modified/"/>
    <url>/2021/08/17/%E8%81%8A%E8%81%8A%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BC%93%E5%AD%98%EF%BC%88Cache-Control%E3%80%81max-age%E5%92%8CExpires%E3%80%81Etag%E5%92%8CLast-Modified%EF%BC%89-liao-liao-liu-lan-qi-huan-cun-cache-controlmax-age-he-expiresetag-he-last-modified/</url>
    
    <content type="html"><![CDATA[<h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><h2 id="缓存存储"><a href="#缓存存储" class="headerlink" title="缓存存储"></a>缓存存储</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Pragma : no-cache  http1<span class="number">.0</span>时期的属性  为了兼容会使用</span><br><span class="line">Expires：<span class="number">0</span>  http1<span class="number">.0</span>时期的属性 </span><br><span class="line">Cache-Control  http1<span class="number">.1</span> 中加入的新属性，它有以下常用参数：</span><br><span class="line">   Public/Private 私有缓存/共有缓存</span><br><span class="line">   no-cache：不建议使用本地缓存，但仍然会缓存到本地</span><br><span class="line">   no-store：不会在客户端缓存任何数据</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>max-age：比较特殊，是一个混合属性，替代了Expires的过期时间</p><p>举个栗子：如果要设置客户端不缓存，并兼容http1.0的方式可以这样写：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Pragma : no-cache </span><br><span class="line">Expires：<span class="number">0</span></span><br><span class="line">Cache-Control：no-store</span><br></pre></td></tr></table></figure><p>等价于</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Pragma : no-cache  <span class="comment">// Pragma为了兼容http1.0</span></span><br><span class="line">Cache-Control：max-age=<span class="number">0</span>  <span class="comment">// 去掉了Expires属性（下面名词解释会说到为什么被去掉），合并到max-age中，</span></span><br></pre></td></tr></table></figure><p>名词解释：<br><strong>私有缓存</strong>：《HTTP权威指南》里面讲到了私有缓存的一种就是在浏览器里面输入  about:cache  可以查看自己浏览器缓存的内容，会给出一个显示了缓存内容“磁盘缓存统计”页面，这个可以看看还挺有意思，能展示不少信息<br><strong>Expires</strong>：过时期限值，GMT格式，是Web服务器响应消息头字段，在响应http请求时告诉浏览器在过期时间前浏览器可以直接从浏览器缓存取数据，而无需再次请求。不过Expires 是HTTP 1.0的东西，现在默认浏览器均默认使用HTTP 1.1，所以它的作用基本忽略。Expires 的一个缺点就是，返回的到期时间是服务器端的时间，这样存在一个问题，如果客户端的时间与服务器的时间相差很大（比如时钟不同步，或者跨时区），那么误差就很大，所以在HTTP 1.1版开始，使用Cache-Control: max-age=秒替代。</p><h2 id="缓存对比"><a href="#缓存对比" class="headerlink" title="缓存对比"></a>缓存对比</h2><ul><li>Last-Modified<br>http1.0时期属性  现在仍在使用</li><li>ETag（Entity Tag）<br>http1.1时期新加属性 ，使用inode+mtime（以下有解释）来计算。根据实体内容生成的一段hash字符串（类似于MD5或者SHA1之后的结果），可以标识资源的状态。 当资源发送改变时，ETag也随之发生变化。</li></ul><p>名词解释：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">inode ：包含文件的元信息，包括以下内容</span><br><span class="line">文件的字节数、文件拥有者的User ID、文件的Group ID</span><br><span class="line">文件的读、写、执行权限</span><br><span class="line">文件的时间戳，共有三个：ctime指inode上一次变动的时间，mtime指文&gt;件内容上一次变动的时间，atime指文件上一次打开的时间。</span><br><span class="line">链接数，即有多少文件名指向这个inode、 文件数据block的位置</span><br><span class="line">mtime：指文件内容上一次变动的时间</span><br></pre></td></tr></table></figure><h3 id="为什么用http1-1新推出了ETag"><a href="#为什么用http1-1新推出了ETag" class="headerlink" title="为什么用http1.1新推出了ETag"></a>为什么用http1.1新推出了ETag</h3><p>某些服务器不能精确得到文件的最后修改时间， 这样就无法通过最后修改时间来判断文件是否更新了。<br>某些文件的修改非常频繁，在秒以下的时间内进行修改. Last-Modified只能精确到秒。<br>一些文件的最后修改时间改变了，但是内容并未改变。 我们不希望客户端认为这个文件修改了。</p><h3 id="ETag有哪些问题"><a href="#ETag有哪些问题" class="headerlink" title="ETag有哪些问题"></a>ETag有哪些问题</h3><p>ETag也有他自己的问题，所以经常在使用中会关闭ETag。举例来说，同一个文件在不同物理机上的inode是不同的，这就导致了在分布式的Web系统中，当访问落在不同的物理机上时会返回不同的ETag，进而导致304失效，降级为200请求。解决办法也有从ETag算法中剥离inode，只是使用mtime，但是这样实际上和Last-Modified就一样了。当然你也可以额外的做一些改进，使ETag对静态资源的算法也是通过hash计算的。不过由于一般我们会使用CDN技术，因此集群部署中的ETag问题并不会造成太大的影响，所以折腾的人也不太是很多。  参考：这篇文章hefangshi同学的回答</p><h1 id="命中缓存速度对比"><a href="#命中缓存速度对比" class="headerlink" title="命中缓存速度对比"></a>命中缓存速度对比</h1><h2 id="缓存命中速度"><a href="#缓存命中速度" class="headerlink" title="缓存命中速度"></a>缓存命中速度</h2><p>缓存命中 &gt; 缓存再验证成功 &gt; 缓存未命中 = 缓存再验证失败；</p><h3 id="缓存命中优先级"><a href="#缓存命中优先级" class="headerlink" title="缓存命中优先级"></a>缓存命中优先级</h3><p>Cache-Control http1.1 &gt; Expires &gt; Pragma http1.0来决定是否 (200 from cache)</p><h3 id="缓存再验证成功"><a href="#缓存再验证成功" class="headerlink" title="缓存再验证成功"></a>缓存再验证成功</h3><p>根据Last-Modified http1.0 和 ETaghttp1.1 来验证是否返回 (304 Not Modified) 两者都有，就必须同时验证，并且两者都满足才会返回304；<br>服务端响应头 Last-Modified 与 客户端请求头 If-Modified-Since 对应<br>服务端响应头 ETag 与 客户端请求头 If-None-Match</p><h1 id="200-from-cache-vs-304-Not-Modified"><a href="#200-from-cache-vs-304-Not-Modified" class="headerlink" title="200 from cache vs 304 Not Modified"></a>200 from cache vs 304 Not Modified</h1><p>为什么有时候明明命中了缓存，控制台中Status显示的不是 200 from cache ？原来是浏览器的原因：</p><ul><li><p>触发 200 from cache：<br>直接点击链接访问<br>输入网址按回车访问<br>二维码扫描</p></li><li><p>触发 304 Not Modified：<br>刷新页面时触发<br>设置了长缓存、但 Entity Tags 没有移除时触发<br>二者怎么选择<br>毫无疑问选择可以尽量多的命中缓存，然后靠更新静态文件的版本号来使缓存失效。关于版本号建议使用 file.xxx.js 的形式而不是 file.js?v=xxx。</p></li></ul><p>可以看这两篇文章有讲述原因：<br><a href="https://developer.yahoo.com/performance/rules.html#expires=">Best Practices for Speeding Up Your Web Site</a><br><a href="https://www.zhihu.com/question/20790576">大公司里怎样开发和部署前端代码？</a></p><h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><p>在研究缓存问题的时候，知乎上看到这个问题：静态资源（JS/CSS）存储在localStorage有什么缺点？为什么没有被广泛应用？ ，看了大神们的答案主要是维护成本实在过高，如果真的速度超快，这点可以忽略，值得花时间研究，但是如果读取再执行的速度可能会比浏览器直接304性能要低，就完全没有必要使用这种方式了。</p><h1 id="基于Spring-Boot-的图片缓存使用样例"><a href="#基于Spring-Boot-的图片缓存使用样例" class="headerlink" title="基于Spring Boot 的图片缓存使用样例"></a>基于Spring Boot 的图片缓存使用样例</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 获取指定图片</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> fileName</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="meta">@GetMapping(&quot;/io/&#123;fileName&#125;&quot;)</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> ResponseEntity  <span class="title">io</span><span class="params">(<span class="meta">@PathVariable</span> String fileName)</span></span>&#123;</span><br><span class="line">     <span class="keyword">try</span> &#123;</span><br><span class="line">         System.out.println(fileName);</span><br><span class="line">         CacheControl cacheControl = CacheControl.maxAge(<span class="number">30</span>, TimeUnit.MINUTES);</span><br><span class="line">         HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">         headers.set(<span class="string">&quot;Content-Type&quot;</span>,<span class="string">&quot;image/jpg&quot;</span>);</span><br><span class="line">         String filePath=<span class="string">&quot;/img/&quot;</span>;</span><br><span class="line">         <span class="keyword">return</span> ResponseEntity.ok()</span><br><span class="line">                 .cacheControl(cacheControl)</span><br><span class="line">                 .headers(headers)</span><br><span class="line">                 .body(FileUtil.readBytes((filePath+fileName )));</span><br><span class="line">     &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">         <span class="keyword">return</span> ResponseEntity.notFound().build();</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>本文大部分转载自：<a href="https://segmentfault.com/a/1190000008277022">http缓存深入研究，200 from cache or 304 not modified？</a></p>]]></content>
    
    
    <categories>
      
      <category>常用Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web缓存</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux通过安装davfs2来挂载webdav网盘</title>
    <link href="/2021/07/24/Linux%E9%80%9A%E8%BF%87%E5%AE%89%E8%A3%85davfs2%E6%9D%A5%E6%8C%82%E8%BD%BDwebdav%E7%BD%91%E7%9B%98-linux-tong-guo-an-zhuang-davfs2-lai-gua-zai-webdav-wang-pan/"/>
    <url>/2021/07/24/Linux%E9%80%9A%E8%BF%87%E5%AE%89%E8%A3%85davfs2%E6%9D%A5%E6%8C%82%E8%BD%BDwebdav%E7%BD%91%E7%9B%98-linux-tong-guo-an-zhuang-davfs2-lai-gua-zai-webdav-wang-pan/</url>
    
    <content type="html"><![CDATA[<h2 id="1-安装webdav"><a href="#1-安装webdav" class="headerlink" title="1. 安装webdav"></a>1. 安装webdav</h2><p>站长使用的是Cloudreve云盘提供的Webdav能力，该云盘可以自己去官网下载安装即可，或者也可以自己搭建webdav服务</p><h2 id="2-安装-fues-和-davfs2"><a href="#2-安装-fues-和-davfs2" class="headerlink" title="2. 安装 fues 和 davfs2"></a>2. 安装 fues 和 davfs2</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install fues davfs2</span><br></pre></td></tr></table></figure><h2 id="3-创建挂载目录"><a href="#3-创建挂载目录" class="headerlink" title="3. 创建挂载目录"></a>3. 创建挂载目录</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /mnt/webdav</span><br></pre></td></tr></table></figure><h2 id="4-挂载webdav"><a href="#4-挂载webdav" class="headerlink" title="4. 挂载webdav"></a>4. 挂载webdav</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -t davfs http:<span class="comment">//www.baidu.com(自己的webdav地址) /mnt/webdav</span></span><br></pre></td></tr></table></figure><p>Please enter the username to authenticate with server</p><p><a href="http://www.baidu.com/">http://www.baidu.com</a> or hit enter for none.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Username: admin #过程中会提示输入webdav用户名、密码</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Please enter the password to authenticate user admin with server</span><br><span class="line"></span><br><span class="line">http:<span class="comment">//www.baidu.com  or hit enter for none.</span></span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">Password:</span><br></pre></td></tr></table></figure><h2 id="5-查看、确认已挂载成功"><a href="#5-查看、确认已挂载成功" class="headerlink" title="5. 查看、确认已挂载成功"></a>5. 查看、确认已挂载成功</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -h /mnt/webdav</span><br></pre></td></tr></table></figure><table><thead><tr><th>文件系统</th><th>容量</th><th>已用</th><th>可用</th><th>已用%</th><th>挂载点</th></tr></thead><tbody><tr><td><a href="http://www.baidu.com/">http://www.baidu.com</a></td><td>1.3T</td><td>763G</td><td>509G</td><td>61%</td><td>/mnt/webdav</td></tr></tbody></table><h2 id="6-卸载挂载"><a href="#6-卸载挂载" class="headerlink" title="6. 卸载挂载"></a>6. 卸载挂载</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">umount /mnt/webdav</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>应用软件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>浅谈前后端分离项目文件访问安全</title>
    <link href="/2021/07/15/%E6%B5%85%E8%B0%88%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E6%96%87%E4%BB%B6%E8%AE%BF%E9%97%AE%E5%AE%89%E5%85%A8-%E6%B5%85%E8%B0%88%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E6%96%87%E4%BB%B6%E8%AE%BF%E9%97%AE%E5%AE%89%E5%85%A8/"/>
    <url>/2021/07/15/%E6%B5%85%E8%B0%88%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E6%96%87%E4%BB%B6%E8%AE%BF%E9%97%AE%E5%AE%89%E5%85%A8-%E6%B5%85%E8%B0%88%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E6%96%87%E4%BB%B6%E8%AE%BF%E9%97%AE%E5%AE%89%E5%85%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>传统项目中文件访问(如文件下载)请求一般采用GET+重定向的方式进行，<br>但是前后端分离项目且采用自定义Token机制时，会出现一个问题。<br>浏览器不会默认携带自己自定义的Header信息，自定义Header信息一般通过自己的拦截器(如AXIOS)或者工具类完成添加。但是如果采用传统的GET+重定向方式，此时就无法对用户的身份像使用Session那样进行自动校验。</p><h1 id="改造方案"><a href="#改造方案" class="headerlink" title="改造方案"></a>改造方案</h1><h2 id="1-文件下载类请求-样例基于vue"><a href="#1-文件下载类请求-样例基于vue" class="headerlink" title="1. 文件下载类请求(样例基于vue)"></a>1. 文件下载类请求(样例基于vue)</h2><p> 将文件下载的click事件定义为自定义函数，并在自定义函数中完成自定义Header的添加，样例如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;startHacking&quot;</span>&gt;</span>Download<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">    startHacking () &#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//此处最好使用Nginx做代理做测试，vue等前端代理会有问题</span></span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> url=<span class="string">&#x27;/sayhi/api/download&#x27;</span>;</span></span><br><span class="line"><span class="javascript">           <span class="comment">//请求报文数据</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> data=&#123;<span class="attr">orderId</span>:<span class="number">123</span>&#125;;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">let</span> xhr = <span class="keyword">new</span> XMLHttpRequest()</span></span><br><span class="line"><span class="javascript">           xhr.open(<span class="string">&#x27;post&#x27;</span>,url)</span></span><br><span class="line"><span class="javascript">           <span class="comment">//如果需要请求头中这是token信息可以在这设置</span></span></span><br><span class="line"><span class="javascript">           xhr.setRequestHeader(<span class="string">&#x27;token&#x27;</span>,<span class="string">&#x27;123322111111&#x27;</span>)</span></span><br><span class="line"><span class="javascript">           xhr.responseType = <span class="string">&#x27;blob&#x27;</span></span></span><br><span class="line"><span class="javascript">           xhr.send(<span class="built_in">JSON</span>.stringify(data))</span></span><br><span class="line"><span class="javascript">           xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="keyword">if</span>(xhr.readyState ===<span class="number">4</span> &amp;&amp; xhr.status === <span class="number">200</span>)&#123;</span></span><br><span class="line"><span class="javascript">                   <span class="keyword">const</span> blob = <span class="keyword">new</span> Blob([xhr.response])</span></span><br><span class="line"><span class="javascript">                   <span class="keyword">let</span> url = <span class="built_in">window</span>.URL.createObjectURL(blob)</span></span><br><span class="line"><span class="javascript">                  <span class="comment">//创建一个a标签元素，设置下载属性，点击下载，最后移除该元素</span></span></span><br><span class="line"><span class="javascript">                   <span class="keyword">let</span> link = <span class="built_in">document</span>.createElement(<span class="string">&#x27;a&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                   link.href = url</span></span><br><span class="line"><span class="javascript">                   link.style.display = <span class="string">&#x27;none&#x27;</span></span></span><br><span class="line"><span class="javascript">                   <span class="comment">//取出下载文件名</span></span></span><br><span class="line"><span class="javascript">                   <span class="keyword">const</span> fileName = xhr.getResponseHeader(<span class="string">&#x27;filename&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                   <span class="built_in">console</span>.info(<span class="string">&quot;fileName:&quot;</span>+fileName)</span></span><br><span class="line"><span class="javascript">                   <span class="keyword">const</span> downlaodFileName = <span class="built_in">decodeURIComponent</span>(fileName)</span></span><br><span class="line"><span class="javascript">      </span></span><br><span class="line"><span class="javascript">                   link.setAttribute(<span class="string">&#x27;download&#x27;</span>,downlaodFileName)</span></span><br><span class="line"><span class="javascript">                   link.click()</span></span><br><span class="line"><span class="javascript">                   <span class="built_in">window</span>.URL.revokeObjectURL(url)</span></span><br><span class="line"><span class="javascript">              &#125;</span></span><br><span class="line"><span class="javascript">          &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-id">#app</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="attribute">font-family</span>: Helvetica, sans-serif;</span></span><br><span class="line"><span class="css">  <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-文件下载类请求-基于axios"><a href="#2-文件下载类请求-基于axios" class="headerlink" title="2. 文件下载类请求(基于axios)"></a>2. 文件下载类请求(基于axios)</h2><p>网上有小伙伴讲，使用axios方式控制自定义token，当执行文件下载请求时，只能处理csv或者txt格式的数据。针对其他格式的文件，有待验证。</p><h2 id="3-图片类请求"><a href="#3-图片类请求" class="headerlink" title="3. 图片类请求"></a>3. 图片类请求</h2><p>针对敏感图片类信息，可以采用Base64格式进行输出，防止被copy图片URL流传到外面从而被判定存在泄露漏洞。<br>对于URL比较多的，例如用户信息页面，图片又需要动态加载，<br>则可以使用如下示例(网络方式，有待确认)：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;img&quot;</span> <span class="attr">authsrc</span>=<span class="string">&quot;/xxxx/xxxx/xxxx&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.defineProperty(Image.prototype, <span class="string">&#x27;authsrc&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">writable</span> : <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">enumerable</span> : <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">configurable</span> : <span class="literal">true</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">var</span> img = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;img&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> url = img.getAttribute(<span class="string">&#x27;authsrc&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> request = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">  request.responseType = <span class="string">&#x27;blob&#x27;</span>;</span><br><span class="line">  request.open(<span class="string">&#x27;get&#x27;</span>, url+<span class="string">&#x27;?phoneNum=&#x27;</span>+phoneNum+<span class="string">&#x27;&amp;width=200&amp;height=200&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">  request.setRequestHeader(<span class="string">&#x27;actoken&#x27;</span>, token);</span><br><span class="line">  request.onreadystatechange = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (request.readyState == XMLHttpRequest.DONE &amp;&amp; request.status == <span class="number">200</span>) &#123;</span><br><span class="line">          img.src = URL.createObjectURL(request.response);</span><br><span class="line">          img.onload = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">              URL.revokeObjectURL(img.src);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  request.send(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>白话安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mysql 8.0 常见问题</title>
    <link href="/2021/06/25/Mysql%208.0%20%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98-mysql80%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    <url>/2021/06/25/Mysql%208.0%20%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98-mysql80%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h2 id="1-查找默认密码"><a href="#1-查找默认密码" class="headerlink" title="1. 查找默认密码"></a>1. 查找默认密码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /<span class="keyword">var</span>/log/mysqld.log</span><br></pre></td></tr></table></figure><h2 id="2-开启远程访问"><a href="#2-开启远程访问" class="headerlink" title="2. 开启远程访问"></a>2. 开启远程访问</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">update user set host = <span class="string">&#x27;%&#x27;</span> where user = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><p>此时root的host是所有都可以了。然后刷新修改，FLUSH PRIVILEGES;<br>这步一定要做，否则无法生效。</p><h2 id="3-远程连接mysql8-0，Error-No-2058-Plugin-caching-sha2-password-could-not-be-loaded"><a href="#3-远程连接mysql8-0，Error-No-2058-Plugin-caching-sha2-password-could-not-be-loaded" class="headerlink" title="3. 远程连接mysql8.0，Error No.2058 Plugin caching_sha2_password could not be loaded"></a>3. 远程连接mysql8.0，Error No.2058 Plugin caching_sha2_password could not be loaded</h2><p>解决方式：<br>使用默认密码登录后，执行以下命令修改默认密码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter user <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;Abc#12345&#x27;</span> password expire never;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="function">rows <span class="title">affected</span> <span class="params">(<span class="number">0.09</span> sec)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">mysql&gt; alter user &#x27;root&#x27;@&#x27;%&#x27; identified with  mysql_native_password by  &#x27;Abc#12345&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="function">rows <span class="title">affected</span> <span class="params">(<span class="number">0.08</span> sec)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">mysql&gt; flush privileges</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="function">rows <span class="title">affected</span> <span class="params">(<span class="number">0.04</span> sec)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">mysql&gt;  alter  user &#x27;root&#x27;@&#x27;%&#x27; identified by &#x27;Abc#12345&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="function">rows <span class="title">affected</span> <span class="params">(<span class="number">0.05</span> sec)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>DevOps | 常用Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>应用软件 | 常用Tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OpenJDK下载与安装</title>
    <link href="/2021/06/17/OpenJDK%E4%B8%8B%E8%BD%BD%E4%B8%8E%E5%AE%89%E8%A3%85-openjdk-xia-zai-yu-an-zhuang/"/>
    <url>/2021/06/17/OpenJDK%E4%B8%8B%E8%BD%BD%E4%B8%8E%E5%AE%89%E8%A3%85-openjdk-xia-zai-yu-an-zhuang/</url>
    
    <content type="html"><![CDATA[<h1 id="OpenJDK-下载地址"><a href="#OpenJDK-下载地址" class="headerlink" title="OpenJDK 下载地址"></a>OpenJDK 下载地址</h1><p><a href="http://jdk.java.net/java-se-ri/16">http://jdk.java.net/java-se-ri/16</a></p><h1 id="下载需要版本的JDK"><a href="#下载需要版本的JDK" class="headerlink" title="下载需要版本的JDK"></a>下载需要版本的JDK</h1><p><img src="https://www.mycitymemory.com/upload/2021/06/20210617154701-e17791302b214fd3b26fa80d565924a9.jpg" alt="20210617154701.jpg"></p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>此处下载的可以直接解压使用</p>]]></content>
    
    
    <categories>
      
      <category>常用Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>常用Tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Tengine安装</title>
    <link href="/2021/06/17/Tengine%E5%AE%89%E8%A3%85-tengine-an-zhuang/"/>
    <url>/2021/06/17/Tengine%E5%AE%89%E8%A3%85-tengine-an-zhuang/</url>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Tengine 源码：http:<span class="comment">//tengine.taobao.org/download.html</span></span><br><span class="line">Pcre源码：https:<span class="comment">//sourceforge.net/projects/pcre/files/pcre/8.35/pcre-8.35.tar.gz/download?use_mirror=nchc</span></span><br><span class="line">OpenSSL源码：https:<span class="comment">//www.openssl.org/source/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>需要提前下载好相关源码</p><h1 id="安装编译软件"><a href="#安装编译软件" class="headerlink" title="安装编译软件"></a>安装编译软件</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc gcc-c++ automake pcre pcre-devel zlip zlib-devel openssl openssl-devel</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/app/nginx --with-pcre=/nginx/plus/pcre-<span class="number">8.35</span> --with-openssl=/nginx/plus/openssl-<span class="number">1.1</span>.1k --with-http_ssl_module --add-<span class="keyword">module</span>=./modules/ngx_http_upstream_check_module --add-<span class="keyword">module</span>=./modules/ngx_http_upstream_session_sticky_module --add-<span class="keyword">module</span>=./modules/ngx_http_upstream_dynamic_module</span><br><span class="line"></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>最新版Tengine的部分模块需要自己手动添加，例如ngx_http_upstream_session_sticky_module 。</p>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>发布第一个开源项目到Maven中央仓库</title>
    <link href="/2021/06/11/%E5%8F%91%E5%B8%83%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%88%B0Maven%E4%B8%AD%E5%A4%AE%E4%BB%93%E5%BA%93-%E5%8F%91%E5%B8%83%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%88%B0maven%E4%B8%AD%E5%A4%AE%E4%BB%93%E5%BA%93%E7%9A%84%E5%8E%86%E7%A8%8B/"/>
    <url>/2021/06/11/%E5%8F%91%E5%B8%83%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%88%B0Maven%E4%B8%AD%E5%A4%AE%E4%BB%93%E5%BA%93-%E5%8F%91%E5%B8%83%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%88%B0maven%E4%B8%AD%E5%A4%AE%E4%BB%93%E5%BA%93%E7%9A%84%E5%8E%86%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>最近想基于Spring Boot做个安全加固类的通用服务，方便团队的小伙伴按需使用。但是之前一直没有尝试过，所以就有了本文。</p><h1 id="发布准备"><a href="#发布准备" class="headerlink" title="发布准备"></a>发布准备</h1><table><thead><tr><th>内容</th><th>备注</th></tr></thead><tbody><tr><td>GPG生成密钥工具</td><td><a href="https://gpg4win.org/download.html">https://gpg4win.org/download.html</a> 在后续流程中下载安装生成密钥并上传置服务器</td></tr><tr><td>工单系统</td><td><a href="https://issues.sonatype.org/">https://issues.sonatype.org</a>    负责申请上传资格及完成第一次上传，后续更新不需要使用</td></tr><tr><td>个人域名</td><td><a href="http://demo.com/">http://demo.com</a> 这里主要用于工单资格验证(Add a TXT record to your DNS referencing this JIRA ticket: OSSRH-XXX (Fastest))</td></tr></tbody></table><h1 id="申请步骤"><a href="#申请步骤" class="headerlink" title="申请步骤"></a>申请步骤</h1><h2 id="1-申请工单系统帐号"><a href="#1-申请工单系统帐号" class="headerlink" title="1.申请工单系统帐号"></a>1.申请工单系统帐号</h2><p>注册地址：<a href="https://issues.sonatype.org/secure/Signup!default.jspa">https://issues.sonatype.org/secure/Signup!default.jspa</a></p><h2 id="2-创建工单"><a href="#2-创建工单" class="headerlink" title="2.创建工单"></a>2.创建工单</h2><p><img src="https://www.mycitymemory.com/upload/2021/06/20210611142225-163ed39e9ed54020804cfd5338550a18.jpg" alt="20210611142225.jpg"></p><p>项目：Community Support - Open Source Project Repository Hosting<br>概要：发布Jar的名称<br>描述：非必填，最好描述清晰<br>Group Id：例如com.demo，主要和你的域名有关系，因为后续需要使用域名验证<br>Project URL：Github项目站点(<a href="https://github.com/xxx/xxx-spring-boot-starter">https://github.com/xxx/xxx-spring-boot-starter</a>)<br>SCM url：源码仓库(<a href="https://github.com/xxx/xxx-spring-boot-starter.git">https://github.com/xxx/xxx-spring-boot-starter.git</a>)<br>注：此处有代码库即可，上传是在本地deploy的，因此代码库可以后续再补充完善。</p><h2 id="3-配合人工审核"><a href="#3-配合人工审核" class="headerlink" title="3.配合人工审核"></a>3.配合人工审核</h2><h3 id="3-1当创建完工单后，会收到信息反馈，示例如下："><a href="#3-1当创建完工单后，会收到信息反馈，示例如下：" class="headerlink" title="3.1当创建完工单后，会收到信息反馈，示例如下："></a>3.1当创建完工单后，会收到信息反馈，示例如下：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Do you own the domain sayrmb.com? If so, please verify ownership via one of the following methods:</span><br><span class="line"></span><br><span class="line">Add a TXT record to your DNS referencing <span class="keyword">this</span> JIRA ticket: OSSRH-<span class="number">69965</span> (Fastest)</span><br><span class="line"><span class="function">Setup a redirect to your Github <span class="title">page</span> <span class="params">(<span class="keyword">if</span> it does not already exist)</span></span></span><br><span class="line"><span class="function">You can find more information here: https:<span class="comment">//central.sonatype.org/publish/</span></span></span><br><span class="line"><span class="function">If you <span class="keyword">do</span> not own <span class="keyword">this</span> domain, please read:</span></span><br><span class="line"><span class="function">https:<span class="comment">//central.sonatype.org/publish/requirements/coordinates/</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">You may also choose a Group ID that reflects your project hosting, in <span class="keyword">this</span> <span class="keyword">case</span>, something like</span></span><br><span class="line"><span class="function">com.github Group IDs are invalid now but io.github may be used instead. Please read the following <span class="keyword">for</span> more info: https:<span class="comment">//central.sonatype.org/changelog/#2021-04-01-comgithub-is-not-supported-anymore-as-a-valid-coordinate</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">If you decide to change your Group ID, please edit <span class="keyword">this</span> ticket and update the Group ID field.</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure><h3 id="3-2-配置域名验证签名"><a href="#3-2-配置域名验证签名" class="headerlink" title="3.2 配置域名验证签名"></a>3.2 配置域名验证签名</h3><p>新建TXT记录，主机记录为：OSSRH-69965，记录值为：<br><a href="https://issues.sonatype.org/browse/OSSRH-69965">https://issues.sonatype.org/browse/OSSRH-69965</a><br>注：此处改为自己的工单号</p><h3 id="3-3-在域名验证截图，回复到问题下，人工审核会进行验证处理"><a href="#3-3-在域名验证截图，回复到问题下，人工审核会进行验证处理" class="headerlink" title="3.3 在域名验证截图，回复到问题下，人工审核会进行验证处理"></a>3.3 在域名验证截图，回复到问题下，人工审核会进行验证处理</h3><p>新建备注，备注信息如下：<br>I hava Add a TXT record use JIRA ticket: OSSRH-69965</p><h3 id="3-4-验证通过后可以在对话页面看到消息，如下示例："><a href="#3-4-验证通过后可以在对话页面看到消息，如下示例：" class="headerlink" title="3.4 验证通过后可以在对话页面看到消息，如下示例："></a>3.4 验证通过后可以在对话页面看到消息，如下示例：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">com.demo has been prepared, <span class="function">now <span class="title">user</span><span class="params">(s)</span> xxx can:</span></span><br><span class="line"><span class="function">Publish snapshot and release artifacts to s01.oss.sonatype.org</span></span><br><span class="line"><span class="function">Have a look at <span class="keyword">this</span> section of our official guide <span class="keyword">for</span> deployment instructions:</span></span><br><span class="line"><span class="function">https:<span class="comment">//central.sonatype.org/publish/publish-guide/#deployment</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">Please comment on <span class="keyword">this</span> ticket when you&#x27;ve released your first <span class="title">component</span><span class="params">(s)</span>, so we can activate the sync to Maven Central.</span></span><br><span class="line"><span class="function">Depending on your build configuration, <span class="keyword">this</span> might happen automatically. If not, you can follow the steps in <span class="keyword">this</span> section of our guide:</span></span><br><span class="line"><span class="function">https:<span class="comment">//central.sonatype.org/publish/release/</span></span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure><h3 id="3-5-执行发布JAR的动作，并等待同步消息"><a href="#3-5-执行发布JAR的动作，并等待同步消息" class="headerlink" title="3.5 执行发布JAR的动作，并等待同步消息"></a>3.5 执行发布JAR的动作，并等待同步消息</h3><p>示例消息如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Central sync is activated <span class="keyword">for</span> com.demo. After you successfully release, your component will be published to Central https:<span class="comment">//repo1.maven.org/maven2/, typically within 10 minutes, though updates to https://search.maven.org can take up to two hours.</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注：10分钟左右在 <a href="https://repo1.maven.org/maven2/">https://repo1.maven.org/maven2/</a> 可以找到<br>2小时左右可以在 <a href="https://search.maven.org/">https://search.maven.org</a> 搜索到</p><h2 id="4-安装Gpg生成密钥"><a href="#4-安装Gpg生成密钥" class="headerlink" title="4.安装Gpg生成密钥"></a>4.安装Gpg生成密钥</h2><p>下载完成后直接安装即可，比较傻瓜式安装很简单，安装后继续以下操作：</p><ul><li>文件&gt;新建密钥对(Ctrl+N) –&gt; 创建个人OpenPGP密钥对</li><li>填写个人信息姓名和邮箱，勾选Protectx选项，并点击-&gt;新建</li><li>填写密钥密码</li><li>秘钥创建成功后，点击-&gt;将公钥上传到目录服务,如果上传失败，则通过：设置(S)-&gt;配置Kleopatra©，修改 OpenPGP密钥服务器为：hkp://keyserver.ubuntu.com:80<br>注：此操作大同小异，不同版本软件可能界面有些许差异。</li></ul><h2 id="5-配置Maven-Settings-xml"><a href="#5-配置Maven-Settings-xml" class="headerlink" title="5.配置Maven Settings.xml"></a>5.配置Maven Settings.xml</h2><p>Maven Settings.xml 配置，在servers中添加：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>sonatype-nexus-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">username</span>&gt;</span>https://issues.sonatype.org的账号<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">password</span>&gt;</span>https://issues.sonatype.org的密码<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>sonatype-nexus-staging<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">username</span>&gt;</span>https://issues.sonatype.org的账号<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">password</span>&gt;</span>https://issues.sonatype.org的密码<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>ossrh<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">username</span>&gt;</span>https://issues.sonatype.org的账号<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">password</span>&gt;</span>https://issues.sonatype.org的密码<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 密钥配置，在profile中添加ossrh</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>ossrh<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">gpg.executable</span>&gt;</span>D:/Program Files (x86)/GnuPG/bin/gpg.exe<span class="tag">&lt;/<span class="name">gpg.executable</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">gpg.passphrase</span>&gt;</span>上面生成的密钥密码：xxx<span class="tag">&lt;/<span class="name">gpg.passphrase</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">gpg.homedir</span>&gt;</span>&#123;找到dir：cmd-&gt;gpg --list-key&#125;C:/Users/xxx/AppData/Roaming/gnupg<span class="tag">&lt;/<span class="name">gpg.homedir</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注：此处2个路径和1个密码均要替换为自己的真实数据，密码为Gpg密钥密码。</p><h2 id="6-配置POM文件"><a href="#6-配置POM文件" class="headerlink" title="6.配置POM文件"></a>6.配置POM文件</h2><p>在pom文件里添加scm、licenses、developers、distributionManagement</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">licenses</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">license</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>The MIT License<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://opensource.org/licenses/mit-license.php<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">distribution</span>&gt;</span>repo<span class="tag">&lt;/<span class="name">distribution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">license</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">scm</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://github.com/xxx/xxx-spring-boot-starter<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">connection</span>&gt;</span>https://github.com/xxx/xxx-spring-boot-starter.git<span class="tag">&lt;/<span class="name">connection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">developerConnection</span>&gt;</span>https://github.com/xxx/xxx-spring-boot-starter<span class="tag">&lt;/<span class="name">developerConnection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">scm</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">developers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">developer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">email</span>&gt;</span>xxx@qq.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://github.com/xxx/xxx-spring-boot-starter<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">developer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">developers</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>ossrh<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://oss.sonatype.org/content/repositories/snapshots<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>配置编译发布信息build，gpg相关插件</p><ul><li>maven-source-plugin 用来生成Source Jar文件</li><li>maven-javadoc-plugin 用来生成 javadoc 文档</li><li>maven-gpg-plugin 用来对工程文件进行自动签名</li><li>nexus-staging-maven-plugin 用来将工程发布到中央仓库，另外注意生成javadoc文档时需要指定关闭doclint，不然可能因为使用了不规范的javadoc注解而导致失败，完整配置如下<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 发布Jar到Maven仓库 Begin --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--生成Source jar文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-source-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>attach-sources<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar-no-fork<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--生成Javadoc，关闭doclint,避免注解检查不通过--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-javadoc-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>attach-javadocs<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">additionalparam</span>&gt;</span>-Xdoclint:none<span class="tag">&lt;/<span class="name">additionalparam</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Maven GPG插件用于使用以下配置对组件进行签名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-gpg-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>sign-artifacts<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">phase</span>&gt;</span>verify<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>sign<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Nexus Staging Maven插件是将组件部署到OSSRH并将其发布到Central Repository的推荐方法--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.sonatype.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nexus-staging-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">extensions</span>&gt;</span>true<span class="tag">&lt;/<span class="name">extensions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">serverId</span>&gt;</span>ossrh<span class="tag">&lt;/<span class="name">serverId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">nexusUrl</span>&gt;</span>https://s01.oss.sonatype.org/<span class="tag">&lt;/<span class="name">nexusUrl</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">autoReleaseAfterClose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">autoReleaseAfterClose</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- release plugin,用于发布到release仓库部署插件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-release-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="7-deploy项目"><a href="#7-deploy项目" class="headerlink" title="7.deploy项目"></a>7.deploy项目</h2></li></ul><p>在maven中选择deploy选项，即可发布自己的模块到maven中央仓库中。过程中会要求输入gpg密码进行二次确认。</p><h2 id="8-扩展提示"><a href="#8-扩展提示" class="headerlink" title="8.扩展提示"></a>8.扩展提示</h2><p>当你的开源项目为多个模块时，只需要配置在parent模块就可以了，deploy可以直接发布parent模块，maven会自动把相关模块一并上传。</p>]]></content>
    
    
    <categories>
      
      <category>常用Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>常用Tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>APP版本号对比如何实现?(Java版本)</title>
    <link href="/2021/06/09/APP%E7%89%88%E6%9C%AC%E5%8F%B7%E5%AF%B9%E6%AF%94%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0_(Java%E7%89%88%E6%9C%AC)-ban-ben-hao-dui-bi-xiao-suan-fa/"/>
    <url>/2021/06/09/APP%E7%89%88%E6%9C%AC%E5%8F%B7%E5%AF%B9%E6%AF%94%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0_(Java%E7%89%88%E6%9C%AC)-ban-ben-hao-dui-bi-xiao-suan-fa/</url>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>在APP比较火热的年代，APP的后台管理系统经常会用到类似版本号对比的算法用来区分不同版本的消息推送等服务。虽然现在APP热度已下降很多，但是在迁移之际还是做一下相关demo的备份。</p><h1 id="版本号对比实现"><a href="#版本号对比实现" class="headerlink" title="版本号对比实现"></a>版本号对比实现</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 比较版本号的大小,前者大则返回一个正数,后者大返回一个负数,相等则返回0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> version1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> version2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">compareVersion</span><span class="params">(String version1, String version2)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (version1 == <span class="keyword">null</span> || version2 == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;compareVersion error:illegal params.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    String[] versionArray1 = version1.split(<span class="string">&quot;\\.&quot;</span>);<span class="comment">//注意此处为正则匹配，不能用.；</span></span><br><span class="line">    String[] versionArray2 = version2.split(<span class="string">&quot;\\.&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> idx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> minLength = Math.min(versionArray1.length, versionArray2.length);<span class="comment">//取最小长度值</span></span><br><span class="line">    <span class="keyword">int</span> diff = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (idx &lt; minLength</span><br><span class="line">            &amp;&amp; (diff = versionArray1[idx].length() - versionArray2[idx].length()) == <span class="number">0</span><span class="comment">//先比较长度</span></span><br><span class="line">            &amp;&amp; (diff = versionArray1[idx].compareTo(versionArray2[idx])) == <span class="number">0</span>) &#123;<span class="comment">//再比较字符</span></span><br><span class="line">    ++idx;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//如果已经分出大小，则直接返回，如果未分出大小，则再比较位数，有子版本的为大；</span></span><br><span class="line">    diff = (diff != <span class="number">0</span>) ? diff : versionArray1.length - versionArray2.length;</span><br><span class="line">    <span class="keyword">return</span> diff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>常用Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>常用Tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Map按Key或Value排序</title>
    <link href="/2021/06/09/Map%E6%8C%89Key%E6%88%96Value%E6%8E%92%E5%BA%8F-map-an-key-huo-value-pai-xu/"/>
    <url>/2021/06/09/Map%E6%8C%89Key%E6%88%96Value%E6%8E%92%E5%BA%8F-map-an-key-huo-value-pai-xu/</url>
    
    <content type="html"><![CDATA[<h1 id="基础回顾"><a href="#基础回顾" class="headerlink" title="基础回顾"></a>基础回顾</h1><p>Map是键值对的集合接口，它的实现类主要包括：HashMap,TreeMap,Hashtable以及LinkedHashMap等。<br>TreeMap：基于红黑树（Red-Black tree）的 NavigableMap 实现，该映射根据其键的自然顺序进行排序，或者根据创建映射时提供的 Comparator 进行排序，具体取决于使用的构造方法。<br>HashMap的值是没有顺序的，它是按照key的HashCode来实现的，对于这个无序的HashMap我们要怎么来实现排序呢？参照TreeMap的value排序。<br>Map.Entry返回Collections视图。</p><h1 id="Map按照key排序"><a href="#Map按照key排序" class="headerlink" title="Map按照key排序"></a>Map按照key排序</h1><p>TreeMap默认是升序的，如果我们需要改变排序方式，则需要使用比较器：Comparator。Comparator可以对集合对象或者数组进行排序的比较器接口，实现该接口的public compare(T o1,To2)方法即可实现排序，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.TreeMap;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TreeMapTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> TreeMap&lt;String, String&gt;(</span><br><span class="line">                <span class="keyword">new</span> Comparator&lt;String&gt;() &#123;</span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(String obj1, String obj2)</span> </span>&#123;</span><br><span class="line">                        <span class="comment">// 降序排序</span></span><br><span class="line">                        <span class="keyword">return</span> obj2.compareTo(obj1);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">        map.put(<span class="string">&quot;b&quot;</span>, <span class="string">&quot;ccccc&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;d&quot;</span>, <span class="string">&quot;aaaaa&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;c&quot;</span>, <span class="string">&quot;bbbbb&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;ddddd&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        Set&lt;String&gt; keySet = map.keySet();</span><br><span class="line">        Iterator&lt;String&gt; iter = keySet.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iter.hasNext()) &#123;</span><br><span class="line">            String key = iter.next();</span><br><span class="line">            System.out.println(key + <span class="string">&quot;:&quot;</span> + map.get(key));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">d:aaaaa</span><br><span class="line">c:bbbbb</span><br><span class="line">b:ccccc</span><br><span class="line">a:ddddd</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Map按照value排序"><a href="#Map按照value排序" class="headerlink" title="Map按照value排序"></a>Map按照value排序</h1><p>上面例子是对根据TreeMap的key值来进行排序的，但是有时我们需要根据TreeMap的value来进行排序。对value排序我们就需要借助于Collections的sort(List<T> list, Comparator&lt;? super T&gt; c)方法，该方法根据指定比较器产生的顺序对指定列表进行排序。但是有一个前提条件，那就是所有的元素都必须能够根据所提供的比较器来进行比较，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Map.Entry;</span><br><span class="line"><span class="keyword">import</span> java.util.TreeMap;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TreeMapTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> TreeMap&lt;String, String&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;ddddd&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;c&quot;</span>, <span class="string">&quot;bbbbb&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;d&quot;</span>, <span class="string">&quot;aaaaa&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;b&quot;</span>, <span class="string">&quot;ccccc&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//这里将map.entrySet()转换成list</span></span><br><span class="line">        List&lt;Map.Entry&lt;String,String&gt;&gt; list = <span class="keyword">new</span> ArrayList&lt;Map.Entry&lt;String,String&gt;&gt;(map.entrySet());</span><br><span class="line">        <span class="comment">//然后通过比较器来实现排序</span></span><br><span class="line">        Collections.sort(list,<span class="keyword">new</span> Comparator&lt;Map.Entry&lt;String,String&gt;&gt;() &#123;</span><br><span class="line">            <span class="comment">//升序排序</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Entry&lt;String, String&gt; o1,</span></span></span><br><span class="line"><span class="params"><span class="function">                    Entry&lt;String, String&gt; o2)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> o1.getValue().compareTo(o2.getValue());</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(Map.Entry&lt;String,String&gt; mapping:list)&#123;</span><br><span class="line">             System.out.println(mapping.getKey()+<span class="string">&quot;:&quot;</span>+mapping.getValue()); </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">d:aaaaa</span><br><span class="line">c:bbbbb</span><br><span class="line">b:ccccc</span><br><span class="line">a:ddddd</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>常用Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>常用Tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>聊聊鉴权中潜在的隐患</title>
    <link href="/2021/06/08/%E8%81%8A%E8%81%8A%E9%89%B4%E6%9D%83%E4%B8%AD%E6%BD%9C%E5%9C%A8%E7%9A%84%E9%9A%90%E6%82%A3-liao-liao-jian-quan-zhong-qian-zai-de-yin-huan/"/>
    <url>/2021/06/08/%E8%81%8A%E8%81%8A%E9%89%B4%E6%9D%83%E4%B8%AD%E6%BD%9C%E5%9C%A8%E7%9A%84%E9%9A%90%E6%82%A3-liao-liao-jian-quan-zhong-qian-zai-de-yin-huan/</url>
    
    <content type="html"><![CDATA[<p>本文主要聊聊常见的鉴权缺陷，各位也可以集思广益，丰富案例场景。</p><h2 id="场景一-会话数据安全性"><a href="#场景一-会话数据安全性" class="headerlink" title="场景一 会话数据安全性"></a>场景一 会话数据安全性</h2><p>一个系统安全的核心，应该在于用户会话的生成环节。我们保障的系统安全，应该是基于用户会话不存在密码或验证码泄露(或网络监听)场景下的，否则常规的用户鉴权无法保障其安全性。我们此处聊的主要是常见的隐患以及可能的安全应对方案。</p><h3 id="隐患一-用户会话可无认证生成"><a href="#隐患一-用户会话可无认证生成" class="headerlink" title="隐患一  用户会话可无认证生成"></a>隐患一  用户会话可无认证生成</h3><p>在不需要用户输入密码或验证码的情况下，可以生成用户会话。例如，调用特定API即可直接生成用户会话令牌。一般情况下，<strong>公网系统或者APP接口严禁使用此类型鉴权方案</strong>。</p><p>对于内网系统，例如OA系统等有特定鉴权方案的系统，可以考虑如下加固方案：</p><p>1）将对方服务器加入IP访问白名单</p><p>2）采用双向鉴权方式，回调对方接口完成一次二次确认，二次确认成功后再生成用户会话</p><h3 id="隐患二-用户身份可横向越权"><a href="#隐患二-用户身份可横向越权" class="headerlink" title="隐患二 用户身份可横向越权"></a>隐患二 用户身份可横向越权</h3><p>例如此时需要查询某个用户名下拥有的权益数据，此时有个API使用参数的形式来识别当前用户，但是如果此参数是一个ID或者手机号等，非法用户可以直接替换ID或手机号从而达到查询其他用户名下拥有的权益数据信息亦或者代替行权。</p><p>对于需要获取当前用户信息的方法，均应使用会话方式获取当前用户信息。<strong>会话级用户数据，严禁使用传参形式传递给后端API。</strong></p><h2 id="场景二-常规业务安全"><a href="#场景二-常规业务安全" class="headerlink" title="场景二 常规业务安全"></a>场景二 常规业务安全</h2><h3 id="隐患一-短信轰炸"><a href="#隐患一-短信轰炸" class="headerlink" title="隐患一  短信轰炸"></a>隐患一  短信轰炸</h3><p>一般情况下，现在短信服务提供商均提供了短信发送限流的服务。对于没有提供的，则需要自行注意。</p><p>例如在用户注册等环节，用户在获取短信验证码时，可以采用如下方式进行限流：</p><p>1）限制1分钟内单个账号的发送次数，限制1天内单个账号的发送次数</p><p>2）对于特定时间内获取验证码超过阈值的，强制其输入图形验证码后方可再执行其他逻辑</p><h3 id="隐患二-密码爆破"><a href="#隐患二-密码爆破" class="headerlink" title="隐患二  密码爆破"></a>隐患二  密码爆破</h3><p>一般情况下，对于明文传输的密码，或者加密密码均可使用特定工具对系统进行密码爆破攻击。</p><p>对于密码爆破，最好的防御措施就是增加对用户账号锁定的逻辑，举例如下：</p><p>1）用户在指定时间内登录失败次数大于3次，要求其输入图形验证码</p><p>2）用户在指定时间内登录失败次数大于10次，锁定其账号1小时、</p><h3 id="隐患三-用户密码弱口令"><a href="#隐患三-用户密码弱口令" class="headerlink" title="隐患三 用户密码弱口令"></a>隐患三 用户密码弱口令</h3><p>目前很多系统经过多轮整改，已经较少出现弱口令的情况。</p><p>在系统建设之初，应该对用户口令进行复杂度校验(前后端均要)，推荐的密码复杂度如下：</p><p>1）最小长度为8位及以上</p><p>2）必须包含数字、大小写字、特殊符号三种类型</p><p>3）不能包含例如qaz这样的键盘排序格式</p>]]></content>
    
    
    <categories>
      
      <category>白话安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx集成GeoIP2模块实现地区识别与屏蔽</title>
    <link href="/2021/06/08/Nginx%E9%9B%86%E6%88%90GeoIP2%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0%E5%9C%B0%E5%8C%BA%E8%AF%86%E5%88%AB%E4%B8%8E%E5%B1%8F%E8%94%BD-nginx-ji-cheng-geoip2-mo-kuai-shi-xian-de-qu-shi-bie-yu-ping-bi/"/>
    <url>/2021/06/08/Nginx%E9%9B%86%E6%88%90GeoIP2%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0%E5%9C%B0%E5%8C%BA%E8%AF%86%E5%88%AB%E4%B8%8E%E5%B1%8F%E8%94%BD-nginx-ji-cheng-geoip2-mo-kuai-shi-xian-de-qu-shi-bie-yu-ping-bi/</url>
    
    <content type="html"><![CDATA[<p>前文：</p><p>最近在研究nginx如何集成geo模块来实现IP自动识别从而进行地区屏蔽的内容。但是度娘N篇文章，发现大家都在转载很久之前的东西。geo1.0官方都不提供下载了，不知道那些小伙伴是怎么实现模块按照和IP库下载的。这个就不互相伤害了，如何集成最新版的geoip2直接继续浏览即可。</p><p>1.nginx下载最新版</p><p>   过程略。</p><p>2.下载依赖软件</p><p>2.1 geoip2核心识别库</p><p>    安装步骤：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="comment">//github.com/maxmind/libmaxminddb/releases/download/1.3.2/libmaxminddb-1.3.2.tar.gz</span></span><br><span class="line">tar -xzf libmaxminddb-<span class="number">1.3</span><span class="number">.2</span>.tar.gz</span><br><span class="line">cd libmaxminddb-<span class="number">1.3</span><span class="number">.2</span></span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">sudo make install</span><br><span class="line">sudo ldconfig</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.2 geoip2-nginx模块</p><p>   下载地址：</p><p>   <a href="https://github.com/TravelEngineers/ngx_http_geoip2_module">https://github.com/TravelEngineers/ngx_http_geoip2_module</a></p><p>   nginx集成步骤：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/appx/nginx-geoip --with-http_stub_status_module --with-pcre=/appx/nginx-geoip/source/pcre-<span class="number">8.38</span> --with-http_realip_module --with-http_gzip_static_module --with-http_ssl_module --with-openssl=/appx/nginx-geoip/source/openssl-<span class="number">1.0</span>.2o --add-<span class="keyword">module</span>=/appx/nginx-geoip/source/ngx_http_geoip2_module-<span class="number">3.2</span></span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  geoip2 IP地址库下载：</p><p>  下载地址：<a href="https://dev.maxmind.com/geoip/geoip2/geolite2/">https://dev.maxmind.com/geoip/geoip2/geolite2/</a></p><p>   注意GeoLite2 City 和GeoLite2 Country 2个文件都要下载。</p><p>   下载选择：MaxMind DB binary, gzipped</p><p>   样例配置(nginx):</p><p>   </p><p>#IP地址库解析映射 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">geoip2 /app/nginx-geoip/geoip_db/GeoLite2-Country_20190521/GeoLite2-Country.mmdb &#123;</span><br><span class="line">    auto_reload 5m;</span><br><span class="line">    $geoip2_metadata_country_build metadata build_epoch; #变量名可以自定义</span><br><span class="line">    $geoip2_country_code <span class="keyword">default</span>=US country iso_code;</span><br><span class="line">    $geoip2_country_name country names zh-CN;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">geoip2 /app/nginx-geoip/geoip_db/GeoLite2-City_20190521/GeoLite2-City.mmdb &#123;</span><br><span class="line">     $geoip2_city_name <span class="keyword">default</span>=ShangHai city names zh-CN;</span><br><span class="line">     $geoip2_continent_code continent code;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">location /myip &#123;</span><br><span class="line">      default_type text/plain;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">200</span> <span class="string">&quot;$remote_addr $geoip2_city_name $geoip2_country_code $geoip2_continent_code&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 2.3 进阶介绍</p><p>   变量$geoip2_continent_code 可以自己指定任意名称，</p><p>   注意  $geoip2_country_name country names zh-CN;</p><p>  代表寻找country_name 这个字段，且是在中文名称的IP库中寻找。</p><p>  如果某个字段并非多语言支持的，则不能写zh-CN。 </p><p>  所有字段名称可以在CSV格式的文件中找到，如果你要取city_code 当前IP这个字段的值，则可以按照、如下设置获取：</p><p> $geoip2_city_code city code;</p><p> COUNTRY和CITY库里面的字段不是全部一样，感兴趣的可以下载CSV格式GEOIP库进行研究。</p>]]></content>
    
    
    <categories>
      
      <category>白话安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>URL存在http host头攻击漏洞-修复方案</title>
    <link href="/2021/06/08/URL%E5%AD%98%E5%9C%A8http%20host%E5%A4%B4%E6%94%BB%E5%87%BB%E6%BC%8F%E6%B4%9E-%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%A1%88-url-cun-zai-httphost-tou-gong-ji-lou-dong---xiu-fu-fang-an/"/>
    <url>/2021/06/08/URL%E5%AD%98%E5%9C%A8http%20host%E5%A4%B4%E6%94%BB%E5%87%BB%E6%BC%8F%E6%B4%9E-%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%A1%88-url-cun-zai-httphost-tou-gong-ji-lou-dong---xiu-fu-fang-an/</url>
    
    <content type="html"><![CDATA[<h1 id="使用Nginx的修复方案"><a href="#使用Nginx的修复方案" class="headerlink" title="使用Nginx的修复方案"></a>使用Nginx的修复方案</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( $host !~* <span class="string">&quot; 10.4.15.1| 10.9.4.9 &quot;</span> ) &#123; </span><br><span class="line">   <span class="keyword">return</span> <span class="number">403</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="基于tocmat的修复方案"><a href="#基于tocmat的修复方案" class="headerlink" title="基于tocmat的修复方案"></a>基于tocmat的修复方案</h1><p>经测试，最低支持Tomcat6.0.x以上版本的修复。</p><p>修复方式</p><p>打开tomcat的conf目录中的server.xml文件，将Host节点做如下配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">&quot;www.baidu.com&quot;</span>  <span class="attr">appBase</span>=<span class="string">&quot;webapps&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">unpackWARs</span>=<span class="string">&quot;true&quot;</span> <span class="attr">autoDeploy</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">xmlValidation</span>=<span class="string">&quot;false&quot;</span> <span class="attr">xmlNamespaceAware</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="comment">&lt;!--本机对外域名--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">Alias</span>&gt;</span>10.1.8.158<span class="tag">&lt;/<span class="name">Alias</span>&gt;</span><span class="comment">&lt;!--本机所支持的所有IP--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span> <span class="attr">directory</span>=<span class="string">&quot;logs&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">prefix</span>=<span class="string">&quot;localhost_access_log.&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;.txt&quot;</span>  <span class="attr">resolveHosts</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">pattern</span>=<span class="string">&quot;%a %A %b %B %h %H %l %m %p %s %S %t %u %U %v %D %T&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="基于Filter的修复方案"><a href="#基于Filter的修复方案" class="headerlink" title="基于Filter的修复方案"></a>基于Filter的修复方案</h1><p>修复方式<br>在工程的web.xml中配置下面代码中的拦截器，注意该拦截器一定要放在第一个执行。<br>最低支持Tomcat7.0.x以上版本的修复<br>范例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HostCleanFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义实现host白名单添加</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filterConfig</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ServletException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        HttpServletRequest request = (HttpServletRequest)servletRequest;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) servletResponse;</span><br><span class="line">        String host=request.getHeader(<span class="string">&quot;Host&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Host-debug:&quot;</span>+host);</span><br><span class="line">        <span class="keyword">if</span>(!isEmpty(host))&#123;</span><br><span class="line">            <span class="keyword">if</span>(checkBlankList(host))&#123;</span><br><span class="line">                filterChain.doFilter(servletRequest,servletResponse);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;[host deny access tips]-&gt;&quot;</span>+host);</span><br><span class="line">                response.getWriter().print(<span class="string">&quot;host deny&quot;</span>);</span><br><span class="line">                response.flushBuffer();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            filterChain.doFilter(servletRequest,servletResponse);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验当前host是否在白名单中</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> host</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">checkBlankList</span><span class="params">(String host)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(host.contains(<span class="string">&quot;.baidu.cn&quot;</span>)host.contains(<span class="string">&quot;10.19.1.&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">(Object str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> str == <span class="keyword">null</span> || <span class="string">&quot;&quot;</span>.equals(str);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>白话安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS部署svn服务</title>
    <link href="/2021/06/08/CentOS%E9%83%A8%E7%BD%B2svn%E6%9C%8D%E5%8A%A1-centos-bu-shu-svn-fu-wu/"/>
    <url>/2021/06/08/CentOS%E9%83%A8%E7%BD%B2svn%E6%9C%8D%E5%8A%A1-centos-bu-shu-svn-fu-wu/</url>
    
    <content type="html"><![CDATA[<h1 id="安装svn"><a href="#安装svn" class="headerlink" title="安装svn"></a>安装svn</h1><p>ps：可以通过svn://id/repo导入或者导出项目</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y subversion  </span><br></pre></td></tr></table></figure><h1 id="验证安装是否成功"><a href="#验证安装是否成功" class="headerlink" title="验证安装是否成功"></a>验证安装是否成功</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svnserve --version  </span><br></pre></td></tr></table></figure><p>     </p><h1 id="启动SVN"><a href="#启动SVN" class="headerlink" title="启动SVN"></a>启动SVN</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#使用<span class="number">9999</span>端口启动svn服务</span><br><span class="line">svnserve --listen-port <span class="number">9999</span> -d -r /home/svndata  </span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="创建svn版本库"><a href="#创建svn版本库" class="headerlink" title="创建svn版本库"></a>创建svn版本库</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">svnadmin create repo  </span><br><span class="line">注：repo是版本库名称</span><br></pre></td></tr></table></figure><h1 id="配置svn"><a href="#配置svn" class="headerlink" title="配置svn"></a>配置svn</h1><p>               <br>创建版本库后，在这个版本库的conf目录下会生成3个配置文件：<br>说明：<br>（1）svnserve.conf：  svn服务综合配置文件。</p><p>（2）passwd： 用户名口令文件。</p><p>（3）authz： 权限配置文件。</p><h2 id="修改passwd文件"><a href="#修改passwd文件" class="headerlink" title="修改passwd文件"></a>修改passwd文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[users]  </span><br><span class="line">shang=<span class="number">123456</span>  </span><br><span class="line">li=<span class="number">123456</span>  </span><br><span class="line">注：shang为用户名，<span class="number">123456</span>为密码</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  </p><h2 id="修改authz文件"><a href="#修改authz文件" class="headerlink" title="修改authz文件"></a>修改authz文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[groups]  </span><br><span class="line">team=shang,li   </span><br><span class="line">[repo:/]  #此处建议写为/如果是只有一个分支的话，即[/]</span><br><span class="line"><span class="meta">@team</span>=rw  </span><br><span class="line">注：repo为之前建立的svn版本库名称</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="修改svnserve-conf"><a href="#修改svnserve-conf" class="headerlink" title="修改svnserve.conf"></a>修改svnserve.conf</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[general]  </span><br><span class="line">anon-access = none  </span><br><span class="line">auth-access = write  </span><br><span class="line">password-db = passwd  </span><br><span class="line">authz-db = authz  </span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="启动和停止svn"><a href="#启动和停止svn" class="headerlink" title="启动和停止svn"></a>启动和停止svn</h1><h2 id="启动svn"><a href="#启动svn" class="headerlink" title="启动svn"></a>启动svn</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@singledb</span>]# svnserve -d -r /home/svndata</span><br><span class="line">#/home/svndata为svn服务的根路径  </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="关闭svn"><a href="#关闭svn" class="headerlink" title="关闭svn"></a>关闭svn</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@singledb</span>]# ps -aux |grep svn  </span><br><span class="line">[root<span class="meta">@singledb</span>]# kill -<span class="number">9</span> 进程id  </span><br></pre></td></tr></table></figure><h1 id="导入工程"><a href="#导入工程" class="headerlink" title="导入工程"></a>导入工程</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir MyProject  </span><br><span class="line">$ mkdir MyProject/trunk  </span><br><span class="line">$ mkdir MyProject/branches  </span><br><span class="line">$ mkdir MyProject/tags  </span><br><span class="line">svn <span class="keyword">import</span> MyProject svn:<span class="comment">//192.168.5.228/repo/MyProject -m &quot;first import project&quot;  </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="导出工程"><a href="#导出工程" class="headerlink" title="导出工程"></a>导出工程</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">svn co svn:<span class="comment">//192.168.5.228/repo/MyProject  </span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>应用软件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpringBoot安全加固之校验上传文件 </title>
    <link href="/2021/06/08/SpringBoot%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA%E4%B9%8B%E6%A0%A1%E9%AA%8C%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%C2%A0-springboot-an-quan-jia-gu-zhi-xiao-yan-shang-chuan-wen-jian-/"/>
    <url>/2021/06/08/SpringBoot%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA%E4%B9%8B%E6%A0%A1%E9%AA%8C%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%C2%A0-springboot-an-quan-jia-gu-zhi-xiao-yan-shang-chuan-wen-jian-/</url>
    
    <content type="html"><![CDATA[<blockquote><p>注: 由于SrpingBoot 从SpringMVC发展而来，因此此方式同样适用于SpringMVC</p></blockquote><h3 id="1-文件上传后端校验的必要性"><a href="#1-文件上传后端校验的必要性" class="headerlink" title="1.文件上传后端校验的必要性?"></a>1.文件上传后端校验的必要性?</h3><p>日常开发过程中，一些业务需要包含文件上传操作。此章节，我们来一起探讨下文件上传后端校验的必要性。具体的实施方案，会在文末给出参考。</p><h4 id="误区一-有前端js校验即可"><a href="#误区一-有前端js校验即可" class="headerlink" title="误区一 有前端js校验即可"></a>误区一 有前端js校验即可</h4><p>使用一些低版本的IE浏览器，或者禁用一部分js逻辑，亦或者使用代理工具即可轻松绕过前端js对于文件类型的校验，方法较多，刚兴趣的小伙伴可以自行研究下。</p><h4 id="误区二-我已经对我的接口做了后端校验"><a href="#误区二-我已经对我的接口做了后端校验" class="headerlink" title="误区二 我已经对我的接口做了后端校验"></a>误区二 我已经对我的接口做了后端校验</h4><p>对于某个功能点来说，有这样的意识说明你的基础不错，也满足了当时的业务需要，是个合格的开发者。但是，你能确保团队成员都会有你这样的意识吗？很显然，在没有专职的代码Review职位时，这个无法保障每个业务功能点都是符合要求的。</p><h4 id="误区三-后端限制只是满足业务需要即使随意上传也无关紧要"><a href="#误区三-后端限制只是满足业务需要即使随意上传也无关紧要" class="headerlink" title="误区三 后端限制只是满足业务需要即使随意上传也无关紧要"></a>误区三 后端限制只是满足业务需要即使随意上传也无关紧要</h4><p>在拥有入侵检测能力的平台，这个话貌似看着也没错。毕竟业务与安全，大部分都是分开讨论的。但是，在没有系统入侵检测能力的平台，这个可能是平台生死存亡的一个大考验。</p><p>常规入侵手法有：</p><p>1）webshell远程控制主机</p><p>2）webshell作为跳板进行内网漫游渗透，探测其他系统，如数据库或者其他平台</p><p>至于如何webshell，感兴趣的小伙伴可以本地搭建个测试环境进行模拟测试。</p><h3 id="2-如何全局性增加后端文件类型校验？"><a href="#2-如何全局性增加后端文件类型校验？" class="headerlink" title="2. 如何全局性增加后端文件类型校验？"></a>2. 如何全局性增加后端文件类型校验？</h3><p>针对全局性的校验，在当下使用比较多的有2种机制。我们此处分别来讨论二种机制来实现全局性校验的可</p><p>行性。</p><h4 id="机制一-基于filter-❌"><a href="#机制一-基于filter-❌" class="headerlink" title="机制一  基于filter ❌"></a>机制一  基于filter ❌</h4><p>基于Filter机制，可以实现诸如SQL注入等常规参数注入类攻击的全局性校验。但是对于文件上传，</p><p>此处有个问题，就是使用Filter时，request一旦获取请求的I/O流数据进行判断，当前请求对应的目标方</p><p>法将无法获取到本次请求对于的参数。关于此方式，小伙伴可以自行做相关测试。</p><h4 id="机制二-基于Interceptor-✅"><a href="#机制二-基于Interceptor-✅" class="headerlink" title="机制二 基于Interceptor ✅"></a>机制二 基于Interceptor ✅</h4><p>此机制就是基于SpringBoot提供的拦截器机制，在preHandle阶段对请求进行相关判断，然后基于判断结果决定是否放行当前请求。此处只给出简要测试案例，各位可结合具体业务进行相关改造。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文件扫描拦截器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileScanInterceptor</span> <span class="keyword">extends</span> <span class="title">HandlerInterceptorAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> FileGuardConfig fileGuardConfig;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FileScanInterceptor</span><span class="params">(FileGuardConfig fileGuardConfig)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.fileGuardConfig = fileGuardConfig;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        HttpServletRequest req=(HttpServletRequest)request;</span><br><span class="line">        MultipartResolver res=<span class="keyword">new</span> StandardServletMultipartResolver();</span><br><span class="line">        <span class="keyword">if</span>(res.isMultipart(req))&#123;</span><br><span class="line">            MultipartHttpServletRequest multipartRequest=(MultipartHttpServletRequest) req;</span><br><span class="line">            Map&lt;String, MultipartFile&gt; files= multipartRequest.getFileMap();</span><br><span class="line">            Iterator&lt;String&gt; iterator = files.keySet().iterator();</span><br><span class="line">            <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">                String formKey = (String) iterator.next();</span><br><span class="line">                MultipartFile multipartFile = multipartRequest.getFile(formKey);</span><br><span class="line">                <span class="keyword">if</span> (!StringUtils.isEmpty(multipartFile.getOriginalFilename())) &#123;</span><br><span class="line">                    String filename = multipartFile.getOriginalFilename();</span><br><span class="line">                    <span class="keyword">if</span>(checkFile(filename))&#123;</span><br><span class="line">                        <span class="keyword">if</span>(fileGuardConfig.getLogTarce())&#123;</span><br><span class="line">                            Logger.info(<span class="string">&quot;[file-upload-log]-url:&#123;&#125;,file:&#123;&#125;&quot;</span>,request.getRequestURI(),filename);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        Logger.error(<span class="string">&quot;[file-upload-alert]-url:&#123;&#125;,file:&#123;&#125;&quot;</span>,request.getRequestURI(),filename);</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span>  <span class="keyword">boolean</span> <span class="title">checkFile</span><span class="params">(String fileName)</span></span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> flag=<span class="keyword">false</span>;</span><br><span class="line">        <span class="comment">//获取文件后缀</span></span><br><span class="line">        String suffix=fileName.substring(fileName.lastIndexOf(<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>, fileName.length());</span><br><span class="line">        <span class="keyword">if</span>(fileGuardConfig.getSuffix().contains(suffix.trim().toLowerCase()))&#123;</span><br><span class="line">            flag=<span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文件防火墙配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;sayhi.fileguard&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileGuardConfig</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否开启</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Boolean enable=<span class="keyword">false</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 拦截范围</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; pathPatterns=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 不拦截范围</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; excludePathPatterns=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件类型白名单</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String suffix=<span class="string">&quot;jpg,gif,png,ico,bmp,jpeg&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开启文件类型二进制校验</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Boolean fileRealCheck=<span class="keyword">false</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否开启上传日志</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Boolean logTarce=<span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sayhi:</span></span><br><span class="line">  <span class="attr">fileguard:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">pathPatterns:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;/**&#x27;</span></span><br><span class="line">    <span class="attr">suffix:</span> <span class="string">jpg,gif,png,ico,bmp,jpeg</span></span><br><span class="line">    <span class="attr">logTarce:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>白话安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
